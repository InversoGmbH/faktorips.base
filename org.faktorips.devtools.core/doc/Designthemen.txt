Designthemen mit Peter:

    * Markierung published Interfaces ueber Ixyz?
    * Umbau Plugin- (org.faktorips.fl, org.faktorips.values) und Package-Struktur
    * Projekteigenschaften. (Einführung eines IpsProjectProperties) Objektes (nur intern, nicht im pub. Int).
	* Stichpunkte zu WorkingCopies aufschreiben (Jan)
    * Design des generierten Codes: Anpassungsstufen.
    	    
    * Tracing
    * Testen von Validierungsregeln
    * Containerrelation (Derived Relation?)
    * Ersetzen der delete() Methode an den Parts durch remove() am Object?
    * Müssen private Membervariablen durch Javadocs markiert werden? JET?

    * Mechanismus mit dem BuilderSets Properties zur Verfügung stellen können.
    * Aufgabenverteilung


=> Kann man vielleicht das Identityproblem umgehen, indem man dafür sorgt, dass es fuer Parts nur jeweils
genau eine Instanz gibt. 
=> Wo liegt hier noch einmal genau das Problem?
=> Verwendung des Memento Patterrns, um die Aenderungen an IpsObjects rueckgaengig machen zu koennen.
=> Koennen wir fuer IpsParts nicht einfach eine kuenstliche ID einfuehren?
=> Dann kann das Restore des im Memento gespeicherten States die Parts aktualisieren, anstatt sie neu zu erzeugen.

Was macht man mit dem IpsObject?



SpeedUp
=======
Beim Verändern eines Attributes nicht ständig aktualisieren des Filecontents.
Wozu braucht man das anyway? Für Dirty-Handling?
=> Kann man das Update des File-Contents nicht auf den Save verlagern?

Plugin-Structure
================
org.faktorips.valuetypes (Money, Decimal)
org.faktorips.common ()
org.faktorips.fl
org.faktorips.runtime
org.faktorips.devtools.core
org.faktorips.devtools.stdbuilder

Dokumentation
=============
Zielformate: HTML-Webseiten, PDF, Eclipse
Quellformat: ?

Eclipse: 
Inhaltverzeichnis in: toc.xml
Jeder Eintrag verweist auf ein Html-File.



