Configuration location:
    file:/D:/fips-ws/dev/.metadata/.plugins/org.eclipse.pde.core/DependencyGraphTest/
Configuration file:
    file:/D:/fips-ws/dev/.metadata/.plugins/org.eclipse.pde.core/DependencyGraphTest/config.ini loaded
Install location:
    file:/d:/eclipse/
Framework located:
    file:/D:/eclipse/plugins/org.eclipse.osgi_3.1.2.jar
Framework classpath:
    file:/D:/eclipse/plugins/org.eclipse.osgi_3.1.2.jar
Debug options:
    file:/D:/fips-ws/dev/.metadata/.plugins/org.eclipse.pde.core/DependencyGraphTest/.options loaded
Time to load bundles: 90
Starting application: 2083
ModelCache created.
==== Start setUp ==== 
ModelCached flushed.
Before creating A,B,C,D
=== First statement in runnable to create a,b,c,d === 
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns null
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//A.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//A.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
IpsSrcFileContents.parse(): Created IpsObject: IpsModel/TestProject/productdef//A.ipspct/A
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//A.ipspct/A
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns null
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//B.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//B.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns Content of file: IpsModel/TestProject/productdef//B.ipspct, parse status: null
IpsSrcFileContents.parse(): Created IpsObject: IpsModel/TestProject/productdef//B.ipspct/B
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//B.ipspct/B
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns Content of file: IpsModel/TestProject/productdef//B.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns Content of file: IpsModel/TestProject/productdef//B.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns null
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//C.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//C.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
IpsSrcFileContents.parse(): Created IpsObject: IpsModel/TestProject/productdef//C.ipspct/C
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//C.ipspct/C
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns null
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//D.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//D.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns Content of file: IpsModel/TestProject/productdef//D.ipspct, parse status: null
IpsSrcFileContents.parse(): Created IpsObject: IpsModel/TestProject/productdef//D.ipspct/D
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//D.ipspct/D
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns Content of file: IpsModel/TestProject/productdef//D.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns Content of file: IpsModel/TestProject/productdef//D.ipspct, parse status: true
=== Last statement in runnable to create a,b,c,d === 
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//A.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//A.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//A.ipspct
IpsSrcFileContents.setSourceTextInternal(): source text has changed.
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//B.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns Content of file: IpsModel/TestProject/productdef//B.ipspct, parse status: true
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//B.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//B.ipspct
IpsSrcFileContents.setSourceTextInternal(): source text has changed.
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//C.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: true
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//C.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//C.ipspct
IpsSrcFileContents.setSourceTextInternal(): source text has changed.
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//D.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns Content of file: IpsModel/TestProject/productdef//D.ipspct, parse status: true
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//D.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//D.ipspct
IpsSrcFileContents.setSourceTextInternal(): source text has changed.
After creating A,B,C,D
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
Before saving A,C and init Graph
=== First statement in runnable to save a,c and create graph === 
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
IpsSrcFile.save() begin: IpsModel/TestProject/productdef//A.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
IpsSrcFile.save() finished: IpsModel/TestProject/productdef//A.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
IpsSrcFile.save() begin: IpsModel/TestProject/productdef//C.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
IpsSrcFile.save() finished: IpsModel/TestProject/productdef//C.ipspct
=== Before creating graph === 
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//A.ipspct/A
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns Content of file: IpsModel/TestProject/productdef//B.ipspct, parse status: null
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//B.ipspct/B
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns Content of file: IpsModel/TestProject/productdef//B.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//C.ipspct/C
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns Content of file: IpsModel/TestProject/productdef//D.ipspct, parse status: null
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//D.ipspct/D
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns Content of file: IpsModel/TestProject/productdef//D.ipspct, parse status: true
all: [IpsModel/TestProject/productdef//A.ipspct/A, IpsModel/TestProject/productdef//B.ipspct/B, IpsModel/TestProject/productdef//C.ipspct/C, IpsModel/TestProject/productdef//D.ipspct/D]ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
=== Graph created === 
=== Last statement in runnable to save a,c and create graph === 
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//A.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//A.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//A.ipspct
IpsSrcFileContents.setSourceTextInternal(): source text unchanged.
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//C.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: true
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//C.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//C.ipspct
IpsSrcFileContents.setSourceTextInternal(): source text unchanged.
After saving A,C and init Graph
==== Beendet setUp ==== 
==== Start testGetDependants ==== 
==== Beendet testGetDependants ==== 
==== Start setUp ==== 
ModelCached flushed.
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//A.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns null
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//A.ipspct
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//B.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns null
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//B.ipspct
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//C.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns null
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//C.ipspct
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//D.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns null
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//D.ipspct
Before creating A,B,C,D
=== First statement in runnable to create a,b,c,d === 
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns null
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//A.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//A.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
IpsSrcFileContents.parse(): Created IpsObject: IpsModel/TestProject/productdef//A.ipspct/A
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//A.ipspct/A
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns null
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//B.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//B.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns Content of file: IpsModel/TestProject/productdef//B.ipspct, parse status: null
IpsSrcFileContents.parse(): Created IpsObject: IpsModel/TestProject/productdef//B.ipspct/B
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//B.ipspct/B
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns Content of file: IpsModel/TestProject/productdef//B.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns Content of file: IpsModel/TestProject/productdef//B.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns null
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//C.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//C.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
IpsSrcFileContents.parse(): Created IpsObject: IpsModel/TestProject/productdef//C.ipspct/C
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//C.ipspct/C
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns null
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//D.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//D.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns Content of file: IpsModel/TestProject/productdef//D.ipspct, parse status: null
IpsSrcFileContents.parse(): Created IpsObject: IpsModel/TestProject/productdef//D.ipspct/D
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//D.ipspct/D
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns Content of file: IpsModel/TestProject/productdef//D.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns Content of file: IpsModel/TestProject/productdef//D.ipspct, parse status: true
=== Last statement in runnable to create a,b,c,d === 
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//A.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//A.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//A.ipspct
IpsSrcFileContents.setSourceTextInternal(): source text has changed.
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//B.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns Content of file: IpsModel/TestProject/productdef//B.ipspct, parse status: true
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//B.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//B.ipspct
IpsSrcFileContents.setSourceTextInternal(): source text has changed.
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//C.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: true
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//C.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//C.ipspct
IpsSrcFileContents.setSourceTextInternal(): source text has changed.
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//D.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns Content of file: IpsModel/TestProject/productdef//D.ipspct, parse status: true
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//D.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//D.ipspct
IpsSrcFileContents.setSourceTextInternal(): source text has changed.
After creating A,B,C,D
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
Before saving A,C and init Graph
=== First statement in runnable to save a,c and create graph === 
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
IpsSrcFile.save() begin: IpsModel/TestProject/productdef//A.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
IpsSrcFile.save() finished: IpsModel/TestProject/productdef//A.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
IpsSrcFile.save() begin: IpsModel/TestProject/productdef//C.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
IpsSrcFile.save() finished: IpsModel/TestProject/productdef//C.ipspct
=== Before creating graph === 
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: null
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//A.ipspct/A
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns Content of file: IpsModel/TestProject/productdef//B.ipspct, parse status: null
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//B.ipspct/B
ModelCache.get() for IpsModel/TestProject/productdef//B.ipspct returns Content of file: IpsModel/TestProject/productdef//B.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: null
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//C.ipspct/C
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns Content of file: IpsModel/TestProject/productdef//D.ipspct, parse status: null
IpsSrcFileContents.parse(): Initialized IpsObject from xml: IpsModel/TestProject/productdef//D.ipspct/D
ModelCache.get() for IpsModel/TestProject/productdef//D.ipspct returns Content of file: IpsModel/TestProject/productdef//D.ipspct, parse status: true
all: [IpsModel/TestProject/productdef//A.ipspct/A, IpsModel/TestProject/productdef//B.ipspct/B, IpsModel/TestProject/productdef//C.ipspct/C, IpsModel/TestProject/productdef//D.ipspct/D]ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
=== Graph created === 
=== Last statement in runnable to save a,c and create graph === 
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//A.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//A.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//A.ipspct
IpsSrcFileContents.setSourceTextInternal(): source text unchanged.
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//C.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: true
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//C.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//C.ipspct
IpsSrcFileContents.setSourceTextInternal(): source text unchanged.
After saving A,C and init Graph
==== Beendet setUp ==== 
==== Start testUpdate ==== 
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
IpsSrcFile.save() begin: IpsModel/TestProject/productdef//A.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
IpsSrcFile.save() finished: IpsModel/TestProject/productdef//A.ipspct
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk: IpsModel/TestProject/productdef//A.ipspct
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
IpsSrcFile.readContentFromCorrespondingFile IpsModel/TestProject/productdef//A.ipspct
ModelCache.put() for IpsModel/TestProject/productdef//A.ipspct
IpsSrcFileContents.setSourceTextInternal(): source text unchanged.
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//C.ipspct returns Content of file: IpsModel/TestProject/productdef//C.ipspct, parse status: true
ModelCache.get() for IpsModel/TestProject/productdef//A.ipspct returns Content of file: IpsModel/TestProject/productdef//A.ipspct, parse status: true
==== Beendet testUpdate ==== 
