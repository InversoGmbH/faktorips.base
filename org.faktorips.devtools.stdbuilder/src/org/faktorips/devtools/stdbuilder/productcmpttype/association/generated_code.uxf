<?xml version="1.0" encoding="UTF-8" standalone="no"?><umlet_diagram><help_text>// Uncomment the following line to change the fontsize:
// fontsize=14


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on UML elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use Â± or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text><zoom_level>10</zoom_level><element><type>com.umlet.element.base.Class</type><coordinates><x>570</x><y>140</y><w>480</w><h>210</h></coordinates><panel_attributes>Product1Gen
--
- product2s : Map&lt;String, IProductComponentLink&lt;IProduct2&gt;
 
--
+ getProduct2s() : List&lt;IProduct2&gt;
+ getProduct2s(Calendar) : List&lt;IProduct2Gen&gt;
+ getProduct2(int) : IProduct2
+ getLinksForProduct2s() : Collection&lt;IProductComponentLink&lt;IProduct2&gt;&gt;
+ getLinkForProduct2(IProduct2) : IProductComponentLink&lt;IProduct2&gt;
+ addProduct2(IProduct2) : void
+ addProduct2(IProduct2, IntegerRange) : void
+ getNumOfProduct2s() : int</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>60</x><y>140</y><w>480</w><h>210</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
/IProduct1Gen/
--
/+ getProduct2s() : List&lt;IProduct2&gt;/
/+ getProduct2s(Calendar) : List&lt;IProduct2Gen&gt;/
/+ getProduct2(int) : IProduct2/
/+ getLinksForProduct2s() : Collection&lt;IProductComponentLink&lt;IProduct2&gt;&gt;/
/+ getLinkForProduct2(IProduct2) : IProductComponentLink&lt;IProduct2&gt;/
/+ getNumOfProduct2s() : int/</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.custom.Text</type><coordinates><x>0</x><y>0</y><w>910</w><h>30</h></coordinates><panel_attributes>Generated java source code for an association "Product2 (Product2s)" in ProductCmptType "Product1" to another ProductCmptType "Product2"</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Package</type><coordinates><x>40</x><y>100</y><w>1030</w><h>270</h></coordinates><panel_attributes>To Many</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Package</type><coordinates><x>40</x><y>410</y><w>1030</w><h>220</h></coordinates><panel_attributes>To One</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Package</type><coordinates><x>10</x><y>50</y><w>1090</w><h>610</h></coordinates><panel_attributes>Aggregation</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Package</type><coordinates><x>10</x><y>700</y><w>1090</w><h>80</h></coordinates><panel_attributes>Association</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Package</type><coordinates><x>1140</x><y>50</y><w>720</w><h>330</h></coordinates><panel_attributes>Aggregation &amp; Defines Derived Union</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Package</type><coordinates><x>1170</x><y>100</y><w>660</w><h>150</h></coordinates><panel_attributes>To Many</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Package</type><coordinates><x>1170</x><y>280</y><w>660</w><h>70</h></coordinates><panel_attributes>To One</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.custom.Text</type><coordinates><x>1190</x><y>310</y><w>100</w><h>30</h></coordinates><panel_attributes>Not possible</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Package</type><coordinates><x>1140</x><y>720</y><w>720</w><h>250</h></coordinates><panel_attributes>Association &amp; Defines Derived Union</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Package</type><coordinates><x>1170</x><y>770</y><w>660</w><h>70</h></coordinates><panel_attributes>To Many</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Package</type><coordinates><x>1170</x><y>870</y><w>660</w><h>70</h></coordinates><panel_attributes>To One</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.custom.Text</type><coordinates><x>1190</x><y>910</y><w>100</w><h>30</h></coordinates><panel_attributes>Not possible</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>60</x><y>450</y><w>480</w><h>120</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
/IProduct1Gen/
--
/+ getProduct2() : IProduct2/
/+ getProduct2(Calendar) : IProduct2Gen/
/+ getLinkForProduct2() : IProductComponentLink&lt;IProduct2&gt;/
/+ getLinkForProduct2(IProduct2) : IProductComponentLink&lt;IProduct2&gt;/</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>570</x><y>450</y><w>480</w><h>160</h></coordinates><panel_attributes>Product1Gen
--
- product2 : IProductComponentLink&lt;IProduct2&gt;	
 
--
+ getProduct2() : IProduct2
+ getProduct2(Calendar) : IProduct2Gen
+ setProduct2(IProduct2) : void
+ getLinkForProduct2() : IProductComponentLink&lt;IProduct2&gt;
+ getLinkForProduct2(IProduct2) : IProductComponentLink&lt;IProduct2&gt;</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.custom.Text</type><coordinates><x>30</x><y>740</y><w>170</w><h>30</h></coordinates><panel_attributes>Same as for Aggregation</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1190</x><y>140</y><w>280</w><h>90</h></coordinates><panel_attributes>&lt;&lt;Interface&gt;&gt;
/IProduct1Gen/
--
/+ getProduct2s() : List&lt;IProduct2&gt;/
/+ getNumOfProduct2s() : int/</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.base.Class</type><coordinates><x>1500</x><y>140</y><w>280</w><h>90</h></coordinates><panel_attributes>Product1Gen
--
</panel_attributes><additional_attributes/></element><element><type>com.umlet.element.custom.Text</type><coordinates><x>1190</x><y>800</y><w>170</w><h>30</h></coordinates><panel_attributes>Same as for Aggregation</panel_attributes><additional_attributes/></element></umlet_diagram>