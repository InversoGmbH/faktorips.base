#!/usr/bin/perl

use File::Find;
use strict;

########
### START OF CONFIGURABLE AREA
########

my $testCasePattern = ".*Test\.java";
my $testCaseExcludePattern = ".*Abstract.*";
my $testSuiteFileName ="AutomatedSuite.java";
my $basedir = "../plugins/" ;                   #path to project-sourcefolders

my @projects = ( "org.faktorips.devtools.core.test", 
                 "org.faktorips.devtools.stdbuilder.test" 
               );

my $debug = "true";               


#Skeleton 
my $skel = <<CODE_HEADER;
package --BASEPACKAGE--;

import java.io.*
import junit.framework.Test;
import junit.framework.TestSuite;

--IMPORTSTATEMENTS--

/* TestSuite generated by org.faktorips.build/generateTestSuite.pl */
public class AutomatedSuite extends TestSuite {
	public static Test suite(){
		
		TestSuite suite = new TestSuite();
		
		--TESTCASES--
		
		return suite;
	}
	
}
CODE_HEADER


#######
### END OF CONFIGURABLE AREA
#######

my $project="";
my $file="";
my @files;

my $skeleton="";
               
foreach $project (@projects){

	my $importstatements="";
	my $testcases="";
	@files= -1;

	debug("scanning for testclasses in $project...");
	find(\&generateList, $basedir . $project);

	
	foreach $file (@files){
		my $classname = getClassName($file);
		my $package = getPackage($file);
		$package =~ s/\s//;
		
		if ( ($package ne "") || ($classname ne "")){
		
			my $fullclassname = $package . "." . $classname;
			$importstatements = $importstatements . "\nimport $fullclassname;";
			$testcases = $testcases . "\n\t\tSystem.out.println(\"executing ".$classname . "\");";
			$testcases = $testcases . "\n\t\tfout = new FileOutputStream (\"/tmp/trace\"); new PrintStream(fout).println (\"".$classname."\");fout.close();";
			$testcases = $testcases . "\n\t\tsuite.addTestSuite(" . $classname. ".class);";

		    


		}
	}
	
	$skeleton = $skel;
	$skeleton =~ s/--BASEPACKAGE--/$project/ig;	
	$skeleton =~ s/--IMPORTSTATEMENTS--/$importstatements/ig;
	$skeleton =~ s/--TESTCASES--/$testcases/ig;
	
	my $packagedir = $project;
	$packagedir =~ s/\./\//ig;
	my $testSuiteFileName = $basedir .$project . "/src/". $packagedir . "/". $testSuiteFileName;
	open(FH, ">$testSuiteFileName") or die "Error opening $testSuiteFileName";
	print FH $skeleton;
	close(FH);
	
	debug("$testSuiteFileName written.");
}


sub generateList(){
	my $name = $File::Find::name;
	if ( ($name =~ m/$testCasePattern/) and ($name !~ m/$testCaseExcludePattern/) ){
		push(@files, $name);
	}
	
}

sub getPackage(){
	my $file = $_[0];
	my $line;
	
	open(FH, "< $file");
	my @content = <FH>;
	close(FH);
	
	
	foreach $line (@content){
		
		if($line =~ m/.*?package\s*?(.*?);/){
			return $1;
		}
	}
}

sub getClassName() {
	$_[0] =~ m/.*\/(.*?)\.java/;
	return $1;
}


sub debug(){
	if ($debug eq "true"){
		print "$_[0]\n";
	}
}
