/*******************************************************************************
 * Copyright (c) 2005,2006 Faktor Zehn GmbH und andere.
 *
 * Alle Rechte vorbehalten.
 *
 * Dieses Programm und alle mitgelieferten Sachen (Dokumentationen, Beispiele,
 * Konfigurationen, etc.) dürfen nur unter den Bedingungen der 
 * Faktor-Zehn-Community Lizenzvereinbarung – Version 0.1 (vor Gründung Community) 
 * genutzt werden, die Bestandteil der Auslieferung ist und auch unter
 *   http://www.faktorips.org/legal/cl-v01.html
 * eingesehen werden kann.
 *
 * Mitwirkende:
 *   Faktor Zehn GmbH - initial API and implementation 
 *
 *******************************************************************************/

package org.faktorips.devtools.core.ui.views.testrunner;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.jdt.core.IJavaProject;
import org.eclipse.jdt.core.ISourceRange;
import org.eclipse.jdt.core.JavaModelException;
import org.eclipse.jface.action.Action;
import org.eclipse.jface.dialogs.ErrorDialog;
import org.eclipse.jface.dialogs.MessageDialog;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.ui.IEditorDescriptor;
import org.eclipse.ui.IFileEditorInput;
import org.eclipse.ui.part.FileEditorInput;
import org.faktorips.devtools.core.IpsPlugin;
import org.faktorips.devtools.core.ui.editors.IpsObjectEditor;

/**
 * Action for opening a test case in the default editor.
 * 
 * @author Joerg Ortmann
 */
public class OpenTestInEditorAction extends Action {
	private String fFileName;
	private IpsTestRunnerViewPart fTestRunnerViewPart;
	
	private ISourceRange fRange;
	
	public OpenTestInEditorAction(IpsTestRunnerViewPart fTestRunnerViewPart, String fileName) {
		super("&Go to File");
		this.fTestRunnerViewPart = fTestRunnerViewPart;
		this.fFileName = fileName;
	}

	/**
	 * {@inheritDoc}
	 */
	public void run() {
		IpsObjectEditor testCaseEditor= null;
		try {
			Object file= findElement(getLaunchedProject(), fFileName);
			if (file == null || ! (file instanceof IFile)) {
				MessageDialog.openError(getShell(), "Cannot Open Editor", "Test case not found in selected project"); 
				return;
			} 
			IFileEditorInput editorInput = new FileEditorInput((IFile) file);
			
	        IEditorDescriptor editor = IpsPlugin.getDefault().getWorkbench().getEditorRegistry().getDefaultEditor(((IFile) file).getName());
			IpsPlugin.getDefault().getWorkbench().getActiveWorkbenchWindow().getActivePage().openEditor(editorInput, editor.getId());
		} catch (CoreException e) {
			ErrorDialog.openError(getShell(), "Error", "Cannot open editor", e.getStatus()); 
			return;
		}
		if (testCaseEditor == null) {
			fTestRunnerViewPart.setInfoMessage("Cannot open editor"); 
			return;
		}
		reveal(testCaseEditor);
	}
	
	private Object findElement(IJavaProject javaProject, String fileName) throws JavaModelException {
		if (javaProject == null)
			return null;
		Object element= javaProject.getProject().getFile(fileName);
		if (element == null) 
			return null;
		
		return element;
	}
	
	private void reveal(IpsObjectEditor textEditor) {
		if (fRange != null);
			// select attribute in editor
	}

	private IJavaProject getLaunchedProject() {
		return fTestRunnerViewPart.getLaunchedProject();
	}
	
	private Shell getShell() {
		return fTestRunnerViewPart.getSite().getShell();
	}	
}
