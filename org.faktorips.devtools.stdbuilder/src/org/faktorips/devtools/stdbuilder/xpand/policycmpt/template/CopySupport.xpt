«IMPORT org::faktorips::devtools::stdbuilder::xpand::model»
«IMPORT org::faktorips::devtools::stdbuilder::xpand::policycmpt::model»

«EXTENSION org::faktorips::devtools::stdbuilder::xpand::template::CommonGeneratorExtensions»

«DEFINE copyMethods FOR XPolicyCmptClass-»
	
   	«IF !abstract-»
    /**
     * {@inheritDoc}
     * 
     * @generated
     */
    «overrideAnnotation(true)»
    public «IModelObject()» «newCopy()» {
        «Map(IModelObject(), IModelObject())» copyMap = new «HashMap(IModelObject(), IModelObject())»();
        «className» newCopy = («className») «newCopyInternal("copyMap")»;
        «copyAssociationsInternal("newCopy", "copyMap")»;
        return newCopy;
    }
	«ENDIF-»
	
	/**
     * «localizedJDoc("METHOD_NEW_COPY_INTERNAL")»
     * 
     * @generated
     */
     «overrideAnnotationIfHasSupertype(false)»«REM»für Vertrag muss override angegeben werden«ENDREM»
    public «IModelObject()» «newCopyInternal(Map(IModelObject(), IModelObject())+" copyMap")» {
    	«IF hasSupertype()-»
	        «className» newCopy = («className»)copyMap.get(this);
	        if (newCopy == null) {
	            newCopy = new «className»();
	            newCopy.«copyProductCmptAndGenerationInternal("this")»;
	            «copyProperties("newCopy", "copyMap")»;
	        }
	        return newCopy;
    	«ELSE-»
	        throw new RuntimeException(
	                "This method has to be abstract. It needs to have an empty body because of a bug in JMerge.");
	    «ENDIF-»
    }

    /**
     * «localizedJDoc("METHOD_COPY_PROPERTIES")»
     * 
     * @generated
     */«REM»«overrideAnnotationIfHasSupertype(false)»«ENDREM»
    protected void «copyProperties(IModelObject()+" copy", Map(IModelObject(), IModelObject())+" copyMap")» {
        «IF attributesToCopy.size > 0-»
        	«className» concreteCopy = («className»)copy;
        	«EXPAND copyAttribute FOREACH attributesToCopy-»
        «ELSE-»
        	«localizedComment("NOTHING_TO_DO")»
        «ENDIF-»
    }

    /**
     * «localizedJDoc("METHOD_COPY_ASSOCIATIONS_INTERNAL")»
     
     * @generated
     */«REM»«overrideAnnotationIfHasSupertype(false)»«ENDREM»
    public void «copyAssociationsInternal(IModelObject()+" abstractCopy", Map(IModelObject(), IModelObject())+" copyMap")» {
        «IF associationsToCopy.size > 0-»
        «ELSE-»
        	«localizedComment("NOTHING_TO_DO")»
        «ENDIF-»
    }
«ENDDEFINE»

«REM»Siehe PolicyCmptImplClassBuilder Z.394«ENDREM»
«DEFINE copyAttribute FOR XPolicyAttribute-»
	«IF considerInCopySupport-»
        concreteCopy.«fieldName» = «fieldName»;
    «ENDIF-»
«ENDDEFINE»

«REM»Siehe PolicyCmptImplClassBuilder Z.523«ENDREM»
«DEFINE copyAssociation FOR XPolicyAssociation-»
	«IF considerInCopySupport-»
        concreteCopy.«fieldName» = «fieldName»;
    «ENDIF-»
«ENDDEFINE»
