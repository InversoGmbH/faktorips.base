Configuration location:
    file:/D:/fips-ws/dev/.metadata/.plugins/org.eclipse.pde.core/DependencyGraphTest/
Configuration file:
    file:/D:/fips-ws/dev/.metadata/.plugins/org.eclipse.pde.core/DependencyGraphTest/config.ini loaded
Install location:
    file:/d:/eclipse/
Framework located:
    file:/D:/eclipse/plugins/org.eclipse.osgi_3.1.2.jar
Framework classpath:
    file:/D:/eclipse/plugins/org.eclipse.osgi_3.1.2.jar
Debug options:
    file:/D:/fips-ws/dev/.metadata/.plugins/org.eclipse.pde.core/DependencyGraphTest/.options loaded
Time to load bundles: 80
Starting application: 1883
ModelManager created.
Start setUp()
ModelManager created.
IpsPackageFragment.createIpsFile - begin: pack=IpsModel/TestProject/productdef/, newFile=A.ipspct, Thead: main
IpsPackageFragment.createIpsFile - finished: pack=IpsModel/TestProject/productdef/, newFile=A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): New content created for IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): About to read content from disk, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content read from disk, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
==== setUp.init: 0
IpsPackageFragment.createIpsFile - begin: pack=IpsModel/TestProject/productdef/, newFile=B.ipspct, Thead: main
IpsPackageFragment.createIpsFile - finished: pack=IpsModel/TestProject/productdef/, newFile=B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): New content created for IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): About to read content from disk, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content read from disk, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsPackageFragment.createIpsFile - begin: pack=IpsModel/TestProject/productdef/, newFile=C.ipspct, Thead: main
IpsPackageFragment.createIpsFile - finished: pack=IpsModel/TestProject/productdef/, newFile=C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): New content created for IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): About to read content from disk, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content read from disk, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsPackageFragment.createIpsFile - begin: pack=IpsModel/TestProject/productdef/, newFile=D.ipspct, Thead: main
IpsPackageFragment.createIpsFile - finished: pack=IpsModel/TestProject/productdef/, newFile=D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): New content created for IpsModel/TestProject/productdef//D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): About to read content from disk, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content read from disk, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
==== setUp-before, Anzahl Relations: 0
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
==== setUp-after, Anzahl Relations: 1
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsSrcFileContent.save() begin: IpsSrcFileContent IpsModel/TestProject/productdef//A.ipspct
IpsSrcFileContent.save() finished. ModStamp=3, IpsSrcFileContent IpsModel/TestProject/productdef//A.ipspct
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsSrcFileContent.save() begin: IpsSrcFileContent IpsModel/TestProject/productdef//C.ipspct
IpsSrcFileContent.save() finished. ModStamp=3, IpsSrcFileContent IpsModel/TestProject/productdef//C.ipspct
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
all: [IpsModel/TestProject/productdef//A.ipspct/A, IpsModel/TestProject/productdef//B.ipspct/B, IpsModel/TestProject/productdef//C.ipspct/C, IpsModel/TestProject/productdef//D.ipspct/D]IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
==== Anzahl Relations: 1
Finished setUp()
Start testGetDependants()
Finished testGetDependants()
Start setUp()
ModelManager created.
IpsPackageFragment.createIpsFile - begin: pack=IpsModel/TestProject/productdef/, newFile=A.ipspct, Thead: main
IpsPackageFragment.createIpsFile - finished: pack=IpsModel/TestProject/productdef/, newFile=A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): New content created for IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): About to read content from disk, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content read from disk, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
==== setUp.init: 0
IpsPackageFragment.createIpsFile - begin: pack=IpsModel/TestProject/productdef/, newFile=B.ipspct, Thead: main
IpsPackageFragment.createIpsFile - finished: pack=IpsModel/TestProject/productdef/, newFile=B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): New content created for IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): About to read content from disk, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content read from disk, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsPackageFragment.createIpsFile - begin: pack=IpsModel/TestProject/productdef/, newFile=C.ipspct, Thead: main
IpsPackageFragment.createIpsFile - finished: pack=IpsModel/TestProject/productdef/, newFile=C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): New content created for IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): About to read content from disk, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content read from disk, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsPackageFragment.createIpsFile - begin: pack=IpsModel/TestProject/productdef/, newFile=D.ipspct, Thead: main
IpsPackageFragment.createIpsFile - finished: pack=IpsModel/TestProject/productdef/, newFile=D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): New content created for IpsModel/TestProject/productdef//D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): About to read content from disk, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content read from disk, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
==== setUp-before, Anzahl Relations: 0
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
==== setUp-after, Anzahl Relations: 1
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsSrcFileContent.save() begin: IpsSrcFileContent IpsModel/TestProject/productdef//A.ipspct
IpsSrcFileContent.save() finished. ModStamp=3, IpsSrcFileContent IpsModel/TestProject/productdef//A.ipspct
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsSrcFileContent.save() begin: IpsSrcFileContent IpsModel/TestProject/productdef//C.ipspct
IpsSrcFileContent.save() finished. ModStamp=3, IpsSrcFileContent IpsModel/TestProject/productdef//C.ipspct
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//B.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//D.ipspct, Thead: main
all: [IpsModel/TestProject/productdef//A.ipspct/A, IpsModel/TestProject/productdef//B.ipspct/B, IpsModel/TestProject/productdef//C.ipspct/C, IpsModel/TestProject/productdef//D.ipspct/D]IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
==== Anzahl Relations: 1
Finished setUp()
==== Anzahl Relations: 1
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk with modStamp 3, IpsModel/TestProject/productdef//A.ipspct Thead: Worker-0
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: Worker-0
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk with modStamp 2, IpsModel/TestProject/productdef//B.ipspct Thead: Worker-0
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//B.ipspct, Thead: Worker-0
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk with modStamp 3, IpsModel/TestProject/productdef//C.ipspct Thead: Worker-0
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: Worker-0
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk with modStamp 2, IpsModel/TestProject/productdef//D.ipspct Thead: Worker-0
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//D.ipspct, Thead: Worker-0
Start testUpdate()
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsSrcFileContent.save() begin: IpsSrcFileContent IpsModel/TestProject/productdef//A.ipspct
IpsSrcFileContent.save() finished. ModStamp=4, IpsSrcFileContent IpsModel/TestProject/productdef//A.ipspct
IpsModel.ResourceDeltaVisitor.visit(): Received notification of IpsSrcFile change on disk with modStamp 4, IpsModel/TestProject/productdef//A.ipspct Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
==== Anzahl Relations: 0
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//C.ipspct, Thead: main
IpsModel.getIpsSrcFileContent(): Content returned from cache, file=IpsModel/TestProject/productdef//A.ipspct, Thead: main
