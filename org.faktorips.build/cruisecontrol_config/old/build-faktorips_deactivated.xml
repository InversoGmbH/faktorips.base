<!-- ==================================== -->
<!-- old/inactive faktorips build targets -->
<!-- ==================================== -->

<project name="build-faktorips" basedir="checkout/../" >
 
 
  <!-- this target builds faktorips and faktorips-test features and executes testcases -->
  <!-- results in environment/results/xml will be merged by cruisecontrol              -->
  <target name="eclipsetest">
    <property name="dir" value="eclipsetest/"/>
    <!--delete all files, excluding the environment-folder-->
    <delete includeemptydirs="true">
      <fileset dir="${dir}">
        <exclude name="environment/**"/>
      </fileset>
    </delete>
    <delete includeemptydirs="true">
      <fileset dir="${dir}">
        <include name="environment/results/xml/"/>
      </fileset>
    </delete>
    <!--get an up-to-date version of the buildscript-->
    <cvs command="co org.faktorips.build" dest="${dir}" cvsroot="${cvsroot}" quiet="true"/>
    <!--execute buildscript which is managed in cvs-module org.faktorips.build/bootstrap/run.sh-->
    <exec executable="/bin/bash" failonerror="true" output="/dev/null" logError="true">
      <arg line="${dir}/org.faktorips.build/bootstrap/run.sh"/>
    </exec>
    <!--copy faktorips-feature and faktorips-test feature into testenvironment 
                <copy todir="${dir}/environment/">
                    <fileset dir="${dir}/I.TestBuild/" >
                                    <include name="*.zip" />
                    </fileset>
                </copy-->
    <!--execute eclipse-plugintests (see ../eclipsetest_skel/test.xml which will be called by the runtests script)-->
    <!--this will install the feature in a fresh environment/eclipse 
                <exec executable="/bin/bash" dir="${dir}/environment/" failonerror="true" logError="true">
                        <arg line="runtests all" />
                </exec-->
    <!--check if there are errors in testcase-logs >
                <exec executable="/usr/bin/perl" dir="/opt/cc/work/" failonerror="true" outputproperty="failprop">
                    <arg line="lookForFailure.pl"/>
                </exec-->
    <!--checkout org.faktorips.integrationtest project >
                <cvs command="co org.faktorips.integrationtest" dest="${dir}" cvsroot="${cvsroot}" quiet="true"/>
                <property name="importbuildfile" value="${dir}/org.faktorips.build/eclipsetest_skel/importProjects.xml" />
            
                
                <delete includeemptydirs="true">
                    <fileset dir="${dir}/environment/workspace/" includes="**/*"/>
                </delete>

                
                <exec executable="/usr/bin/java" failonerror="true" logError="true">
                    <arg line="-jar  ${dir}/environment/eclipse//plugins/org.eclipse.equinox.launcher_1.0.101.R34x_v20080819.jar -data ${dir}/environment/workspace/ -consolelog -application org.eclipse.ant.core.antRunner -buildfile ${importbuildfile} -Dsourcedir=${dir}/org.faktorips.integrationtest/" />
                </exec>
            

                <property name="classes" value="${dir}/environment/workspace/org.faktorips.integrationtest/testbin/" />
                <property name="libdir" value="${dir}/environment/workspace/org.faktorips.integrationtest/lib/" />

                <junit fork="yes" haltonerror="yes" haltonfailure="yes" printsummary="withOutAndErr" timeout="10000"  showoutput="yes">

                    <formatter type="xml" usefile="true"/>
                    <classpath>
                        <pathelement location="${libdir}/../bin"/>
                        <pathelement location="${libdir}/commons-lang-1.0.1.jar"/>
                        <pathelement location="${libdir}/enums.jar"/>
                        <pathelement location="${libdir}/faktorips-runtime.jar"/>
                        <pathelement location="${libdir}/faktorips-valuetypes.jar"/>
                        <pathelement location="${libdir}/junit.jar"/>

                        <pathelement location="${classes}"/>
                        <pathelement path="${java.class.path}"/> 
                        <fileset dir="${dir}/environment/workspace/org.faktorips.integrationtest/lib/" >
                            <patternset> 
                                <include name="*.jar" />
                            </patternset>
                        </fileset>
                    </classpath>
                    

                    <batchtest filtertrace="off"  todir="${dir}/environment/results/xml"> 
                        <fileset dir="${classes}">
                            <patternset id="test.sources">
                                <exclude name="**/*Abstract*" />
                                <include name="**/*Test.class"/>
                            </patternset>
                        </fileset>
                    </batchtest>
                    
                </junit-->
    <!--check if there are errors in testcase-logs-->
    <exec executable="/usr/bin/perl" dir="/opt/cc/work/" failonerror="true" outputproperty="failprop">
      <arg line="lookForFailure.pl"/>
    </exec>
  </target>
  <!--this target builds faktorips and faktorips-test features and executes testcases 
                 results in environment/results/xml will be merged by cruisecontrol-->
  <target name="fips-releasebuild">
    <property name="dir" value="releasebuild/"/>
    <!--delete all files, excluding the environment-folder-->
    <delete includeemptydirs="true">
      <fileset dir="${dir}">
        <exclude name="environment/**"/>
      </fileset>
    </delete>
    <delete includeemptydirs="true">
      <fileset dir="${dir}">
        <include name="environment/results/xml/"/>
      </fileset>
    </delete>
    <!--get an up-to-date version of the buildscript-->
    <cvs command="co org.faktorips.build" dest="${dir}" cvsroot="${cvsroot}" quiet="true"/>
    <!--execute buildscript which is managed in cvs-module org.faktorips.build/bootstrap/run.sh-->
    <exec executable="/bin/bash" failonerror="true" output="/dev/null" logError="true">
      <arg line="${dir}/org.faktorips.build/bootstrap/run.sh"/>
    </exec>
    <!--copy faktorips-feature and faktorips-test feature into testenvironment-->
    <copy todir="${dir}/environment/">
      <fileset dir="${dir}/I.TestBuild/">
        <include name="*.zip"/>
      </fileset>
    </copy>
    <!--execute eclipse-plugintests (see ../eclipsetest_skel/test.xml which will be called by the runtests script)-->
    <!--this will install the feature in a fresh environment/eclipse-->
    <exec executable="/bin/bash" dir="${dir}/environment/" failonerror="true" logError="true">
      <arg line="runtests all"/>
    </exec>
    <!--check if there are errors in testcase-logs >
                    <exec executable="/usr/bin/perl" dir="/opt/cc/work/" failonerror="true" outputproperty="failprop">
                        <arg line="lookForFailure.pl"/>
                    </exec-->
    <!--checkout org.faktorips.integrationtest project-->
    <cvs command="co org.faktorips.integrationtest" dest="${dir}" cvsroot="${cvsroot}" quiet="true"/>
    <property name="importbuildfile" value="${dir}/org.faktorips.build/eclipsetest_skel/importProjects.xml"/>
    <!--empty workspace which will contain the integrationtest-project-->
    <delete includeemptydirs="true">
      <fileset dir="${dir}/environment/workspace/" includes="**/*"/>
    </delete>
    <!--import and build integrationtest sources via eclipse antRunner (see ../eclipsetest_skel/importProjects.xml)-->
    <exec executable="/usr/bin/java" failonerror="true" logError="true">
      <arg line="-jar  ${dir}/environment/eclipse/plugins/org.eclipse.equinox.launcher_1.0.101.R34x_v20080819.jar -data ${dir}/environment/workspace/ -consolelog -application org.eclipse.ant.core.antRunner -buildfile ${importbuildfile} -Dsourcedir=${dir}/org.faktorips.integrationtest/"/>
    </exec>
    <!--run org.faktorips.integrationtest tests-->
    <property name="classes" value="${dir}/environment/workspace/org.faktorips.integrationtest/testbin/"/>
    <property name="libdir" value="${dir}/environment/workspace/org.faktorips.integrationtest/lib/"/>
    <junit fork="yes" haltonerror="yes" haltonfailure="yes" printsummary="withOutAndErr" timeout="10000" showoutput="yes">
      <formatter type="xml" usefile="true"/>
      <classpath>
        <pathelement location="${libdir}/../bin"/>
        <pathelement location="${libdir}/commons-lang-1.0.1.jar"/>
        <pathelement location="${libdir}/enums.jar"/>
        <pathelement location="${libdir}/faktorips-runtime.jar"/>
        <pathelement location="${libdir}/faktorips-valuetypes.jar"/>
        <pathelement location="${libdir}/junit.jar"/>
        <pathelement location="${classes}"/>
        <pathelement path="${java.class.path}"/>
        <fileset dir="${dir}/environment/workspace/org.faktorips.integrationtest/lib/">
          <patternset>
            <include name="*.jar"/>
          </patternset>
        </fileset>
      </classpath>
      <!--put result logfiles into given logdir (passed by cruisecontrol-config.xml in project org.faktorips.eclipsetest-->
      <batchtest filtertrace="off" todir="${dir}/environment/results/xml">
        <fileset dir="${classes}">
          <patternset id="test.sources">
            <exclude name="**/*Abstract*"/>
            <include name="**/*Test.class"/>
          </patternset>
        </fileset>
      </batchtest>
    </junit>
    <!--check if there are errors in testcase-logs-->
    <exec executable="/usr/bin/perl" dir="/opt/cc/work/" failonerror="true" outputproperty="failprop">
      <arg line="lookForFailure.pl"/>
    </exec>
  </target>
  <!--this target builds bbv and bbv-test features and executes testcases 
             results in environment/results/xml will be merged by cruisecontrol-->
  <target name="eclipsetest-bbv">
    <property name="dir" value="eclipsetest_bbv/"/>
    <!--delete all files, excluding the environment-folder-->
    <delete includeemptydirs="true">
      <fileset dir="${dir}">
        <exclude name="environment/**"/>
      </fileset>
    </delete>
    <!--get an up-to-date version of the buildscript-->
    <cvs command="co de.bbv.faktorips.build" dest="${dir}" cvsroot="${cvsroot}" quiet="true"/>
    <!--execute buildscript which is managed in cvs-module de.bbv.faktorips.build/bootstrap/run.sh-->
    <exec executable="/bin/bash" failonerror="true" output="/dev/null" logError="true">
      <arg line="${dir}/de.bbv.faktorips.build/bootstrap/run.sh"/>
    </exec>
    <!--copy faktorips-feature and faktorips-test feature into testenvironment-->
    <copy todir="${dir}/environment/">
      <fileset dir="${dir}/I.TestBuild/">
        <include name="*.zip"/>
      </fileset>
    </copy>
    <!--execute test-script-->
    <exec executable="/bin/bash" dir="${dir}/environment/" failonerror="true" logError="true">
      <arg line="runtests all"/>
    </exec>
    <!--check if there are errors in testcase-logs-->
    <exec executable="/usr/bin/perl" dir="/opt/cc/work/" failonerror="true" outputproperty="failprop">
      <arg line="lookForFailure_bbv.pl"/>
    </exec>
  </target>
</project>
