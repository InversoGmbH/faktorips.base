«IMPORT org::faktorips::devtools::stdbuilder»
«IMPORT java::util»
«IMPORT org::faktorips::devtools::core::builder::naming»
«IMPORT org::faktorips::devtools::stdbuilder::xpand::model»
«IMPORT org::faktorips::devtools::stdbuilder::xpand::productcmpt::model»

«EXTENSION org::faktorips::devtools::stdbuilder::xpand::template::CommonGeneratorExtensions»

«DEFINE memberField FOR XTableUsage-»
    /**
     * «localizedJDoc("FIELD_TABLE_USAGE", name)»
     * «getAnnotations(AnnotatedJavaElementType::ELEMENT_JAVA_DOC)»
     * @generated
     */
    private String «field(fieldName)» = null;
«ENDDEFINE»

«DEFINE propertyField FOR XTableUsage-»
	/**
	 * «localizedJDoc("PROPERTY_TABLE_USAGE", name)»
	 * «getAnnotations(AnnotatedJavaElementType::ELEMENT_JAVA_DOC)»
	 * @generated
	 */
	 public static final String «field(constantNameTable)» = "«name»";
«ENDDEFINE»

«DEFINE getterAndSetter FOR XTableUsage-»
	«EXPAND getter-»
	«EXPAND setter-»
«ENDDEFINE»

«DEFINE getter FOR XTableUsage-»
    /**
     * «localizedJDoc("METHOD_GET_TABLE", name)»
     * «getAnnotations(AnnotatedJavaElementType::ELEMENT_JAVA_DOC)»
     * @generated
     */
	 «getAnnotations(AnnotatedJavaElementType::TABLE_USAGE_GETTER)-»
    public «tableClassName» «method(methodNameGetter)» {
        if («fieldName» == null) {
            return null;
        }
        return «castFromTo("ITable", tableClassName)»getRepository().getTable(«fieldName»);
    }
«ENDDEFINE»

«DEFINE setter FOR XTableUsage-»
    /**
     * «localizedJDoc("METHOD_SET_TABLE_NAME", fieldName.toFirstUpper())»
     * «getAnnotations(AnnotatedJavaElementType::ELEMENT_JAVA_DOC)»
     * @generated
     */
    public void «method(methodNameSetter, "String", "tableName")» {
        «EXPAND ProductCommons::checkRepositoryModifyable-»
        this.«fieldName» = tableName;
    }
«ENDDEFINE»

«DEFINE doInitFromXmlMethodCall FOR XTableUsage-»
	«methodNameDoInitFromXml»(tableUsageMap);
«ENDDEFINE»

«DEFINE doInitFromXmlMethod FOR XTableUsage-»
	/**
     * @generated
     */
	private void «method(methodNameDoInitFromXml, Map("String", Element()), " tableUsageMap")» {
        Element element = tableUsageMap.get(«constantNameTable»);
        if (element != null) {
            «fieldName» = «ValueToXmlHelper()».«getValueFromElement("element", XML_TAG_TABLE_CONTENT_NAME())»;
        }
	}
«ENDDEFINE»

«DEFINE writeTableUsages FOR XTableUsage-»
        writeTableUsageToXml(element, «constantNameTable», «fieldName»);
«ENDDEFINE»
