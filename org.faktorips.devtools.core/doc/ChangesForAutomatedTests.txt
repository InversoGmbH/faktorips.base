Um die automatisierten Plugin Testfälle zu erstellen ist es notwendig die Projekte in Plugin-Projekt und Test-Plugin-Projekt zu unterteilen.
Dies führt zu dem Problem, dass beim Zugriff auf protected und package private Methoden aus gleichen packages unterschiedlicher Projekte im 
automatisieren Testauflauf ein IllegalAccessError geworfen wird. Deshalb wurden fürs erste diese Methoden auf public umgestellt. Unten ist 
die Liste der umgestellten Methoden.


org.faktorips.devtools.stdbuilder.TocFileBuilder
-public TocEntryObject createTocEntry(IProductCmpt productCmpt) von package private auf public
-public TocEntryObject createTocEntry(ITableContents tableContents) von package private auf public

org.faktorips.devtools.core.IpsPlugin
-public void reinitModel von package private auf public

org.faktorips.devtools.core.internal.model.IpsSrcFile
-public IpsSrcFile(IIpsElement parent, String name) von package private auf public


org.faktorips.devtools.core.internal.model.IpsPackageFragmentRoot
-public void findProductCmpts(String pcTypeName, boolean includeSubtypes, List result) throws CoreException
-public void findIpsObjectsStartingWith(IpsObjectType type, String prefix, boolean ignoreCase, List result) throws CoreException {

org.faktorips.devtools.core.internal.model.IpsSrcFolderEntry
-public IpsSrcFolderEntry(IpsObjectPath path)
-public IpsSrcFolderEntry(IpsObjectPath path, IFolder sourceFolder)


org.faktorips.devtools.core.internal.model.IpsProjectRefEntry
-public IpsProjectRefEntry(IpsObjectPath path)
-public IpsProjectRefEntry(IpsObjectPath path, IIpsProject referencedIpsProject)


org.faktorips.devtools.core.internal.model.IpsModel
-public void notifyChangeListeners(final ContentChangeEvent event) {

org.faktorips.devtools.core.internal.model.IpsProjectProperties
-public static Locale getLocale(String s)

org.faktorips.devtools.core.internal.model.IpsPackageFragment
-public void findIpsObjectsStartingWith(IpsObjectType type, String prefix, boolean ignoreCase, List result) throws CoreException

org.faktorips.devtools.core.internal.model
-public void findIpsObjectsStartingWith(IIpsProject project, IpsObjectType type, String prefix, boolean ignoreCase, List result) throws CoreException {

org.faktorips.devtools.core.internal.model.product.ProductCmptRelation
-public ProductCmptRelation()

org.faktorips.devtools.core.internal.model.tablestructure.TableStructure
-protected TableStructure() -> public TableStructure()

org.faktorips.devtools.core.internal.model.pctype.TypeHierarchy
-public final static TypeHierarchy getSupertypeHierarchy(IPolicyCmptType pcType) throws CoreException, CycleException
-public final static TypeHierarchy getSubtypeHierarchy(IPolicyCmptType pcType) throws CoreException, CycleException

org.faktorips.devtools.core.internal.model.pctype.Attribute
-public Attribute()

org.faktorips.devtools.core.builder.JetJavaSourceFileBuilder
-protected String generate() throws CoreException -> public String generate() throws CoreException

org.faktorips.devtools.core.builder.JetJavaContentGenerator
-protected String appendClass
-protected String appendClassName
-protected void markImportLocation(StringBuffer buffer)
-protected void addImports(StringBuffer buffer) throws CoreException

org.faktorips.devtools.core.builder.JavaSourceFileBuilder
-protected IIpsObject getIpsObject()
-protected IIpsSrcFile getIpsSrcFile()

org.faktorips.devtools.core.ui.editors.productcmpt.FormulaCompletionProcessor
-protected void doComputeCompletionProposals

org.faktorips.devtools.core.internal.model.IpsSourceFileContents
-public class IpsSourceFileContents Klasse ist package private
-public IpsSourceFileContents(IIpsSrcFile file, String sourceText, String encoding)

org.faktorips.devtools.core.ui.editors.pctype.ValidatedAttributesCompletionProcessor
-protected void doComputeCompletionProposals(String prefix, int documentOffset, List result) throws Exception 

org.faktorips.devtools.core.internal.model.IpsModelManager
-void putSrcFileContents(IIpsSrcFile file, IpsSourceFileContents newContent)