<?xml version="1.0" encoding="UTF-8"?><umlet_diagram><element><type>com.umlet.element.base.Note</type><coordinates><x>570</x><y>450</y><w>600</w><h>130</h></coordinates><panel_attributes>Beziehungen zu ValueObjects sind im Gegensatz nicht qualifiziert.

Unterschied Strukturregeln &amp; Attribute Value Constraints:
Strukturregel: Standardregel mit ergänzendem boolscher Ausdruck 
ValueConstraint: Beschreibung einer Wertemenge</panel_attributes><additional_attributes></additional_attributes></element><element><type>com.umlet.element.base.Note</type><coordinates><x>120</x><y>620</y><w>1060</w><h>460</h></coordinates><panel_attributes>Auskunftsmethoden (für diesen Fall) am Vertrag:

AssociationKind getAssociationKindForDeckungstyp(Deckungstyp typ)
ModifyAction getModifyActionForDeckungstyp(Deckungstyp typ)
 
AssociationKind
 - MANDATORY (min=1, max=1)
 - OPTIONAL     (min=0, max=1)
 - NOT_ALLOWED  (min=0, max=0)
 
ModifyAction
 - MUST_ADD
 - MUST_REMOVE
 - CAN_ADD
 - CAN_REMOVE
 - NONE
 
ModifyAction kann man aus der AssociationKind und der Tatsache, ob bereits eine Deckung für einen bestimmten Deckungstyps am Vertrag existiert ermitteln:
 - MANDATORY, Deckung existiert nicht =&gt; NONE
 - MANDATORY, Deckung existiert=&gt; MUST_ADD
 - OPTIONAL, Deckung existiert nicht =&gt; CAN_ADD
 - OPTIONAL, Deckung existiert=&gt; CAN_REMOVE
 - NOT_ALLOWED, Deckung existiert nicht =&gt; NONE
 - NOT_ALLOWED, Deckung existiert=&gt; MUST_REMOVE

Für QualifiedAssociations mit einem * könnte man evtl.
IntegerRange getCardinalityForDeckungstyp(Deckungstyp typ)
ModifyAction[] getModifyActionsForDeckungstyp(Deckungstyp typ)
</panel_attributes><additional_attributes></additional_attributes></element><element><type>com.umlet.element.base.Note</type><coordinates><x>570</x><y>60</y><w>800</w><h>370</h></coordinates><panel_attributes>Ein Vertrag kann mehrere Deckung enthalten, aber pro Deckungstyp maximal eine!!! 
Achtung: Die Kardinalität bei einer QualifiedAssociation gilt pro Qualifier-Instanz!!!
 
Bei dieser Form der qualifizierten Beziehung (mit max Kard.=1), legen die Strukturregeln pro Deckungstyp die (berechnete) 
Kardinalität der Beziehung fest. Die möglichen Kardianlitäten können wird auch als AssociationKind bezeichnen:
 - MANDATORY (min=1, max=1)
 - OPTIONAL     (min=0, max=1)
 - NOT_ALLOWED  (min=0, max=0)
 
These: 
In den Modellen bei der KQV handelt es sich immer um qualifizierte Ass. mit max Cardinality=1.
Standardstrukturregeln wie (A=&gt;B) oder (entweder A oder B) gehen immer von max=1 aus.
Die vorliegenden Beispiele für Strukturregeln basieren alle auf diesem Prinzip.

Ermittlung der berechneten Kardinalität für einen Deckungstypen.
1.) Zu Beginn ist die Kardinalität min=0, max=1
2.) Jetzt werden alle Regeln angewandt-
     Jede Regel kann max auf 0 bzw. min auf 1 setzen. 

Bezieht sich eine Strukturregel auf einen einzelnen Deckungstyp, so ist sie ein boolescher Ausdruck, zusammen mit der 
Informationen, ob bei wahr min=1 oder max=0 gilt. 
Für Strukturregeln, die sich auf mehrere Deckungstypen beziehen, gibt es festgelegt Standardformen 
(die evtl. über boolsche Ausdrücke erweitert werden können).

</panel_attributes><additional_attributes></additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>150</x><y>210</y><w>170</w><h>40</h></coordinates><panel_attributes>lt=-
</panel_attributes><additional_attributes>150;20;20;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>31</x><y>360</y><w>138</w><h>120</h></coordinates><panel_attributes>lt=-
r1=Versicherungssumme</panel_attributes><additional_attributes>69;100;69;20</additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>350</x><y>80</y><w>40</w><h>160</h></coordinates><panel_attributes>lt=-
</panel_attributes><additional_attributes>20;140;20;20</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>50</x><y>460</y><w>100</w><h>30</h></coordinates><panel_attributes>Money</panel_attributes><additional_attributes></additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>50</x><y>350</y><w>100</w><h>30</h></coordinates><panel_attributes>Vertrag</panel_attributes><additional_attributes></additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>150</x><y>60</y><w>170</w><h>40</h></coordinates><panel_attributes>lt=-
</panel_attributes><additional_attributes>150;20;20;20</additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>300</x><y>60</y><w>150</w><h>40</h></coordinates><panel_attributes>Produkt</panel_attributes><additional_attributes></additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>300</x><y>220</y><w>150</w><h>30</h></coordinates><panel_attributes>Deckungstyp</panel_attributes><additional_attributes></additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>20</x><y>220</y><w>150</w><h>30</h></coordinates><panel_attributes>Deckung</panel_attributes><additional_attributes></additional_attributes></element><element><type>com.umlet.element.base.Class</type><coordinates><x>20</x><y>60</y><w>150</w><h>40</h></coordinates><panel_attributes>Vertrag</panel_attributes><additional_attributes></additional_attributes></element><element><type>com.umlet.element.base.Relation</type><coordinates><x>35</x><y>80</y><w>111</w><h>160</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
q1=Deckungstyp
m2=0..1
</panel_attributes><additional_attributes>55;20;55;140</additional_attributes></element></umlet_diagram>