# 
# Locale dependant generated Java sourcecode documentation in German.
#

# JavaDoc
CONSTRUCTOR_JAVADOC=Creates a new test case.
INITINPUTFROMXML_JAVADOC=Initializes the test case's input with the data from the xml.
INITEXPECTEDRESULTFROMXML_JAVADOC=Initializes the test case's expected result with the data from the xml.
EXECUTEBUSINESSLOGIC_JAVADOC=Executes the business logic under test.
EXECUTEASSERTS_JAVADOC=Executes the asserts that compare actual with expected result.
EXECUTEBUSINESSLOGIC_TODO=: Insert calls to the business logic under test.\n\r// e.g. if you have modelled a test parameter Policy which class hass a method calculatePremium()\n\r// you could call it with inputPolicy.calculatePremium().
ASSERT_TODO=: Inserts the asserts to execute.\n\r// Asserts are programed as in JUnit via calling assert(..) methods.\n\r// E.g. assert(expectedPolicy.getPremium(), inputPolicy.getPremium(), result);
RUNTIME_EXCEPTION_NO_ASSERTS=No asserts implemented in the Java class that represents the test case type.
INPUT_PREFIX=input
EXPECTED_RESULT_PREFIX=expected
RULE_VIOLATED_PREFIX=Violated
RULE_NOT_VIOLATED_PREFIX=NotViolated
VIOLATED_CONSTANT_NAME=VIOLATED
NOT_VIOLATED_CONSTANT_NAME=NOT_VIOLATED
ASSERT_RULE_METHOD_JAVADOC=Executes the asserts for the rule.
ASSERT_FAIL_VIOLATION_EXPECTED=Missing rule violation: 
ASSERT_FAIL_NO_VIOLATION_EXPECTED=Rule violation not expected: 
