«IMPORT java::util»
«IMPORT org::faktorips::devtools::core::builder::naming»
«IMPORT org::faktorips::devtools::stdbuilder::xpand::model»
«IMPORT org::faktorips::devtools::stdbuilder::xpand::productcmpt::model»

«EXTENSION org::faktorips::devtools::stdbuilder::xpand::template::CommonGeneratorExtensions»

«REM»TODO Sadly there are some minor differences between product methods and policy methos. Maybe we want to join these templates and generate more equal code«ENDREM» 

«DEFINE method(boolean interface) FOR XMethod-»
	«IF published || !interface-»
	    /**
	    «IF published && !interface-»
	     * «inheritDocOrText(description)»
	     *
	«REM»TODO Simple else would be enough«ENDREM»     «ELSEIF description.length > 0-» 
	     * «description» 
	    «ENDIF-»
	     * @generated
	     */
	     «overrideAnnotationForPublishedMethodOrIf(!interface && published, overrides)-»
	    «getModifier(interface)» «javaClassName» «method(methodName, methodParameters)» «IF abstract || interface-»
	    	;
	    «ELSE-»
		    {
		        // TODO implement model method.
		        throw new RuntimeException("Not implemented yet!");
		    }
	    «ENDIF-»
	«ENDIF-»
«ENDDEFINE»