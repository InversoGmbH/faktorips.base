/*******************************************************************************
 * Copyright (c) 2005-2012 Faktor Zehn AG und andere.
 * 
 * Alle Rechte vorbehalten.
 * 
 * Dieses Programm und alle mitgelieferten Sachen (Dokumentationen, Beispiele, Konfigurationen,
 * etc.) duerfen nur unter den Bedingungen der Faktor-Zehn-Community Lizenzvereinbarung - Version
 * 0.1 (vor Gruendung Community) genutzt werden, die Bestandteil der Auslieferung ist und auch unter
 * http://www.faktorzehn.org/fips:lizenz eingesehen werden kann.
 * 
 * Mitwirkende: Faktor Zehn AG - initial API and implementation - http://www.faktorzehn.de
 *******************************************************************************/

/* Generated By:JJTree&JavaCC: Do not edit this line. FlParserTokenManager.java */
package org.faktorips.fl.parser;

public class FlParserTokenManager implements FlParserConstants {
    public java.io.PrintStream debugStream = System.out;

    public void setDebugStream(java.io.PrintStream ds) {
        debugStream = ds;
    }

    private final int jjStopStringLiteralDfa_0(int pos, long active0) {
        switch (pos) {
            case 0:
                if ((active0 & 0x20000000L) != 0L) {
                    return 29;
                }
                if ((active0 & 0xc000000L) != 0L) {
                    return 49;
                }
                return -1;
            default:
                return -1;
        }
    }

    private final int jjStartNfa_0(int pos, long active0) {
        return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
    }

    private final int jjStopAtPos(int pos, int kind) {
        jjmatchedKind = kind;
        jjmatchedPos = pos;
        return pos + 1;
    }

    private final int jjStartNfaWithStates_0(int pos, int kind, int state) {
        jjmatchedKind = kind;
        jjmatchedPos = pos;
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            return pos + 1;
        }
        return jjMoveNfa_0(state, pos + 1);
    }

    private final int jjMoveStringLiteralDfa0_0() {
        switch (curChar) {
            case 33:
                jjmatchedKind = 30;
                return jjMoveStringLiteralDfa1_0(0x200000L);
            case 40:
                return jjStopAtPos(0, 31);
            case 41:
                return jjStopAtPos(0, 32);
            case 42:
                return jjStopAtPos(0, 28);
            case 43:
                return jjStartNfaWithStates_0(0, 26, 49);
            case 45:
                return jjStartNfaWithStates_0(0, 27, 49);
            case 47:
                return jjStartNfaWithStates_0(0, 29, 29);
            case 59:
                return jjStopAtPos(0, 33);
            case 60:
                jjmatchedKind = 22;
                return jjMoveStringLiteralDfa1_0(0x1000000L);
            case 61:
                return jjStopAtPos(0, 20);
            case 62:
                jjmatchedKind = 23;
                return jjMoveStringLiteralDfa1_0(0x2000000L);
            default:
                return jjMoveNfa_0(0, 0);
        }
    }

    private final int jjMoveStringLiteralDfa1_0(long active0) {
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            jjStopStringLiteralDfa_0(0, active0);
            return 1;
        }
        switch (curChar) {
            case 61:
                if ((active0 & 0x200000L) != 0L) {
                    return jjStopAtPos(1, 21);
                } else if ((active0 & 0x1000000L) != 0L) {
                    return jjStopAtPos(1, 24);
                } else if ((active0 & 0x2000000L) != 0L) {
                    return jjStopAtPos(1, 25);
                }
                break;
            default:
                break;
        }
        return jjStartNfa_0(0, active0);
    }

    private final void jjCheckNAdd(int state) {
        if (jjrounds[state] != jjround) {
            jjstateSet[jjnewStateCnt++] = state;
            jjrounds[state] = jjround;
        }
    }

    private final void jjAddStates(int start, int end) {
        do {
            jjstateSet[jjnewStateCnt++] = jjnextStates[start];
        } while (start++ != end);
    }

    private final void jjCheckNAddTwoStates(int state1, int state2) {
        jjCheckNAdd(state1);
        jjCheckNAdd(state2);
    }

    private final void jjCheckNAddStates(int start, int end) {
        do {
            jjCheckNAdd(jjnextStates[start]);
        } while (start++ != end);
    }

    static final long[] jjbitVec0 = { 0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL,
            0xffffffffffffffffL };
    static final long[] jjbitVec2 = { 0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL };
    static final long[] jjbitVec3 = { 0x0L, 0x0L, 0x0L, 0x1040801010408010L };

    private final int jjMoveNfa_0(int startState, int curPos) {
        int startsAt = 0;
        jjnewStateCnt = 176;
        int i = 1;
        jjstateSet[0] = startState;
        int kind = 0x7fffffff;
        for (;;) {
            if (++jjround == 0x7fffffff) {
                ReInitRounds();
            }
            if (curChar < 64) {
                long l = 1L << curChar;
                MatchLoop: do {
                    switch (jjstateSet[--i]) {
                        case 29:
                            if (curChar == 42) {
                                jjCheckNAddTwoStates(35, 36);
                            } else if (curChar == 47) {
                                jjCheckNAddStates(0, 2);
                            }
                            break;
                        case 0:
                            if ((0x3ff000000000000L & l) != 0L) {
                                if (kind > 8) {
                                    kind = 8;
                                }
                                jjCheckNAddStates(3, 20);
                            } else if ((0x280000000000L & l) != 0L) {
                                jjCheckNAddStates(21, 30);
                            } else if (curChar == 46) {
                                jjCheckNAddTwoStates(50, 75);
                            } else if (curChar == 47) {
                                jjAddStates(31, 32);
                            } else if (curChar == 34) {
                                jjCheckNAddStates(33, 35);
                            }
                            break;
                        case 49:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddStates(36, 38);
                            } else if (curChar == 46) {
                                jjCheckNAdd(75);
                            }
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddTwoStates(70, 71);
                            } else if (curChar == 46) {
                                jjCheckNAdd(50);
                            }
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddStates(39, 41);
                            }
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddTwoStates(62, 63);
                            }
                            if ((0x3ff000000000000L & l) != 0L) {
                                if (kind > 9) {
                                    kind = 9;
                                }
                                jjCheckNAddTwoStates(58, 59);
                            }
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddTwoStates(54, 55);
                            }
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddStates(42, 44);
                            }
                            if ((0x3ff000000000000L & l) != 0L) {
                                if (kind > 8) {
                                    kind = 8;
                                }
                                jjCheckNAdd(41);
                            }
                            break;
                        case 1:
                            if ((0xfffffffbffffdbffL & l) != 0L) {
                                jjCheckNAddStates(33, 35);
                            }
                            break;
                        case 3:
                            if ((0x8400000000L & l) != 0L) {
                                jjCheckNAddStates(33, 35);
                            }
                            break;
                        case 4:
                            if (curChar == 34 && kind > 11) {
                                kind = 11;
                            }
                            break;
                        case 5:
                            if ((0xff000000000000L & l) != 0L) {
                                jjCheckNAddStates(45, 48);
                            }
                            break;
                        case 6:
                            if ((0xff000000000000L & l) != 0L) {
                                jjCheckNAddStates(33, 35);
                            }
                            break;
                        case 7:
                            if ((0xf000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 8;
                            }
                            break;
                        case 8:
                            if ((0xff000000000000L & l) != 0L) {
                                jjCheckNAdd(6);
                            }
                            break;
                        case 28:
                            if (curChar == 47) {
                                jjAddStates(31, 32);
                            }
                            break;
                        case 30:
                            if ((0xffffffffffffdbffL & l) != 0L) {
                                jjCheckNAddStates(0, 2);
                            }
                            break;
                        case 31:
                            if ((0x2400L & l) != 0L && kind > 5) {
                                kind = 5;
                            }
                            break;
                        case 32:
                            if (curChar == 10 && kind > 5) {
                                kind = 5;
                            }
                            break;
                        case 33:
                            if (curChar == 13) {
                                jjstateSet[jjnewStateCnt++] = 32;
                            }
                            break;
                        case 34:
                            if (curChar == 42) {
                                jjCheckNAddTwoStates(35, 36);
                            }
                            break;
                        case 35:
                            if ((0xfffffbffffffffffL & l) != 0L) {
                                jjCheckNAddTwoStates(35, 36);
                            }
                            break;
                        case 36:
                            if (curChar == 42) {
                                jjAddStates(49, 50);
                            }
                            break;
                        case 37:
                            if ((0xffff7fffffffffffL & l) != 0L) {
                                jjCheckNAddTwoStates(38, 36);
                            }
                            break;
                        case 38:
                            if ((0xfffffbffffffffffL & l) != 0L) {
                                jjCheckNAddTwoStates(38, 36);
                            }
                            break;
                        case 39:
                            if (curChar == 47 && kind > 6) {
                                kind = 6;
                            }
                            break;
                        case 40:
                            if ((0x280000000000L & l) != 0L) {
                                jjCheckNAddStates(21, 30);
                            }
                            break;
                        case 41:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 8) {
                                kind = 8;
                            }
                            jjCheckNAdd(41);
                            break;
                        case 42:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddStates(42, 44);
                            }
                            break;
                        case 43:
                            if ((0x280000000000L & l) != 0L) {
                                jjCheckNAdd(42);
                            }
                            break;
                        case 44:
                            if (curChar != 46) {
                                break;
                            }
                            if (kind > 9) {
                                kind = 9;
                            }
                            jjCheckNAddTwoStates(45, 46);
                            break;
                        case 45:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 9) {
                                kind = 9;
                            }
                            jjCheckNAddTwoStates(45, 46);
                            break;
                        case 47:
                            if ((0x280000000000L & l) != 0L) {
                                jjCheckNAdd(48);
                            }
                            break;
                        case 48:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 9) {
                                kind = 9;
                            }
                            jjCheckNAdd(48);
                            break;
                        case 50:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 9) {
                                kind = 9;
                            }
                            jjCheckNAddTwoStates(50, 51);
                            break;
                        case 52:
                            if ((0x280000000000L & l) != 0L) {
                                jjCheckNAdd(53);
                            }
                            break;
                        case 53:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 9) {
                                kind = 9;
                            }
                            jjCheckNAdd(53);
                            break;
                        case 54:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddTwoStates(54, 55);
                            }
                            break;
                        case 56:
                            if ((0x280000000000L & l) != 0L) {
                                jjCheckNAdd(57);
                            }
                            break;
                        case 57:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 9) {
                                kind = 9;
                            }
                            jjCheckNAdd(57);
                            break;
                        case 58:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 9) {
                                kind = 9;
                            }
                            jjCheckNAddTwoStates(58, 59);
                            break;
                        case 60:
                            if ((0x280000000000L & l) != 0L) {
                                jjCheckNAdd(61);
                            }
                            break;
                        case 61:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 9) {
                                kind = 9;
                            }
                            jjCheckNAdd(61);
                            break;
                        case 62:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddTwoStates(62, 63);
                            }
                            break;
                        case 66:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddStates(39, 41);
                            }
                            break;
                        case 68:
                            if ((0x280000000000L & l) != 0L) {
                                jjCheckNAdd(69);
                            }
                            break;
                        case 69:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddTwoStates(69, 63);
                            }
                            break;
                        case 70:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddTwoStates(70, 71);
                            }
                            break;
                        case 72:
                            if ((0x280000000000L & l) != 0L) {
                                jjCheckNAdd(73);
                            }
                            break;
                        case 73:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddTwoStates(73, 63);
                            }
                            break;
                        case 74:
                            if (curChar == 46) {
                                jjCheckNAdd(75);
                            }
                            break;
                        case 75:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddStates(51, 53);
                            }
                            break;
                        case 77:
                            if ((0x280000000000L & l) != 0L) {
                                jjCheckNAdd(78);
                            }
                            break;
                        case 78:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddTwoStates(78, 63);
                            }
                            break;
                        case 79:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddStates(36, 38);
                            }
                            break;
                        case 80:
                            if ((0x280000000000L & l) != 0L) {
                                jjCheckNAdd(79);
                            }
                            break;
                        case 81:
                            if (curChar == 46) {
                                jjCheckNAddStates(54, 56);
                            }
                            break;
                        case 82:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddStates(54, 56);
                            }
                            break;
                        case 84:
                            if ((0x280000000000L & l) != 0L) {
                                jjCheckNAdd(85);
                            }
                            break;
                        case 85:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddTwoStates(85, 63);
                            }
                            break;
                        case 86:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 8) {
                                kind = 8;
                            }
                            jjCheckNAddStates(3, 20);
                            break;
                        case 87:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 88;
                            }
                            break;
                        case 88:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 89;
                            }
                            break;
                        case 89:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 90;
                            }
                            break;
                        case 90:
                            if (curChar == 45) {
                                jjstateSet[jjnewStateCnt++] = 91;
                            }
                            break;
                        case 91:
                            if ((0x3000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 92;
                            }
                            break;
                        case 92:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 19) {
                                kind = 19;
                            }
                            jjstateSet[jjnewStateCnt++] = 93;
                            break;
                        case 93:
                            if (curChar == 45) {
                                jjstateSet[jjnewStateCnt++] = 94;
                            }
                            break;
                        case 94:
                            if ((0xf000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 95;
                            }
                            break;
                        case 95:
                            if ((0x3ff000000000000L & l) != 0L && kind > 19) {
                                kind = 19;
                            }
                            break;
                        case 96:
                            if (curChar == 46) {
                                jjCheckNAddTwoStates(50, 75);
                            }
                            break;
                        case 98:
                        case 108:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 15) {
                                kind = 15;
                            }
                            jjCheckNAddStates(57, 61);
                            break;
                        case 99:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 100;
                            }
                            break;
                        case 100:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 101;
                            }
                            break;
                        case 101:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 102;
                            }
                            break;
                        case 102:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 103;
                            }
                            break;
                        case 103:
                            if (curChar == 45) {
                                jjstateSet[jjnewStateCnt++] = 104;
                            }
                            break;
                        case 104:
                            if ((0x3000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 105;
                            }
                            break;
                        case 105:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 15) {
                                kind = 15;
                            }
                            jjCheckNAddStates(62, 67);
                            break;
                        case 106:
                            if (curChar == 45) {
                                jjstateSet[jjnewStateCnt++] = 107;
                            }
                            break;
                        case 107:
                            if ((0xf000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 108;
                            }
                            break;
                        case 110:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddTwoStates(110, 111);
                            }
                            break;
                        case 112:
                            if (curChar == 46) {
                                jjstateSet[jjnewStateCnt++] = 113;
                            }
                            break;
                        case 114:
                        case 124:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 15) {
                                kind = 15;
                            }
                            jjCheckNAddStates(68, 72);
                            break;
                        case 115:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 116;
                            }
                            break;
                        case 116:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 117;
                            }
                            break;
                        case 117:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 118;
                            }
                            break;
                        case 118:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 119;
                            }
                            break;
                        case 119:
                            if (curChar == 45) {
                                jjstateSet[jjnewStateCnt++] = 120;
                            }
                            break;
                        case 120:
                            if ((0x3000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 121;
                            }
                            break;
                        case 121:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 15) {
                                kind = 15;
                            }
                            jjCheckNAddStates(73, 78);
                            break;
                        case 122:
                            if (curChar == 45) {
                                jjstateSet[jjnewStateCnt++] = 123;
                            }
                            break;
                        case 123:
                            if ((0xf000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 124;
                            }
                            break;
                        case 126:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddTwoStates(126, 111);
                            }
                            break;
                        case 127:
                            if (curChar == 34) {
                                jjCheckNAddStates(79, 81);
                            }
                            break;
                        case 128:
                            if ((0xfffffffbffffdbffL & l) != 0L) {
                                jjCheckNAddStates(79, 81);
                            }
                            break;
                        case 130:
                            if ((0x8400000000L & l) != 0L) {
                                jjCheckNAddStates(79, 81);
                            }
                            break;
                        case 131:
                        case 148:
                            if (curChar == 34) {
                                jjCheckNAdd(111);
                            }
                            break;
                        case 132:
                            if ((0xff000000000000L & l) != 0L) {
                                jjCheckNAddStates(82, 85);
                            }
                            break;
                        case 133:
                            if ((0xff000000000000L & l) != 0L) {
                                jjCheckNAddStates(79, 81);
                            }
                            break;
                        case 134:
                            if ((0xf000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 135;
                            }
                            break;
                        case 135:
                            if ((0xff000000000000L & l) != 0L) {
                                jjCheckNAdd(133);
                            }
                            break;
                        case 144:
                            if (curChar == 34) {
                                jjCheckNAddStates(86, 88);
                            }
                            break;
                        case 145:
                            if ((0xfffffffbffffdbffL & l) != 0L) {
                                jjCheckNAddStates(86, 88);
                            }
                            break;
                        case 147:
                            if ((0x8400000000L & l) != 0L) {
                                jjCheckNAddStates(86, 88);
                            }
                            break;
                        case 149:
                            if ((0xff000000000000L & l) != 0L) {
                                jjCheckNAddStates(89, 92);
                            }
                            break;
                        case 150:
                            if ((0xff000000000000L & l) != 0L) {
                                jjCheckNAddStates(86, 88);
                            }
                            break;
                        case 151:
                            if ((0xf000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 152;
                            }
                            break;
                        case 152:
                            if ((0xff000000000000L & l) != 0L) {
                                jjCheckNAdd(150);
                            }
                            break;
                        case 153:
                        case 163:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 16) {
                                kind = 16;
                            }
                            jjCheckNAddStates(93, 95);
                            break;
                        case 154:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 155;
                            }
                            break;
                        case 155:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 156;
                            }
                            break;
                        case 156:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 157;
                            }
                            break;
                        case 157:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 158;
                            }
                            break;
                        case 158:
                            if (curChar == 45) {
                                jjstateSet[jjnewStateCnt++] = 159;
                            }
                            break;
                        case 159:
                            if ((0x3000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 160;
                            }
                            break;
                        case 160:
                            if ((0x3ff000000000000L & l) == 0L) {
                                break;
                            }
                            if (kind > 16) {
                                kind = 16;
                            }
                            jjCheckNAddStates(96, 99);
                            break;
                        case 161:
                            if (curChar == 45) {
                                jjstateSet[jjnewStateCnt++] = 162;
                            }
                            break;
                        case 162:
                            if ((0xf000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 163;
                            }
                            break;
                        case 165:
                            if ((0x3ff000000000000L & l) != 0L) {
                                jjCheckNAddTwoStates(165, 166);
                            }
                            break;
                        case 167:
                            if (curChar == 34) {
                                jjCheckNAddStates(100, 102);
                            }
                            break;
                        case 168:
                            if ((0xfffffffbffffdbffL & l) != 0L) {
                                jjCheckNAddStates(100, 102);
                            }
                            break;
                        case 170:
                            if ((0x8400000000L & l) != 0L) {
                                jjCheckNAddStates(100, 102);
                            }
                            break;
                        case 171:
                            if (curChar == 34) {
                                jjCheckNAdd(166);
                            }
                            break;
                        case 172:
                            if ((0xff000000000000L & l) != 0L) {
                                jjCheckNAddStates(103, 106);
                            }
                            break;
                        case 173:
                            if ((0xff000000000000L & l) != 0L) {
                                jjCheckNAddStates(100, 102);
                            }
                            break;
                        case 174:
                            if ((0xf000000000000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 175;
                            }
                            break;
                        case 175:
                            if ((0xff000000000000L & l) != 0L) {
                                jjCheckNAdd(173);
                            }
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else if (curChar < 128) {
                long l = 1L << (curChar & 077);
                MatchLoop: do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if ((0x7fffffe87fffffeL & l) != 0L) {
                                if (kind > 15) {
                                    kind = 15;
                                }
                                jjCheckNAddStates(107, 114);
                            }
                            if ((0x4000000040L & l) != 0L) {
                                jjAddStates(115, 116);
                            } else if ((0x10000000100000L & l) != 0L) {
                                jjAddStates(117, 118);
                            } else if ((0x400000004000L & l) != 0L) {
                                jjAddStates(119, 120);
                            }
                            break;
                        case 1:
                            if ((0xffffffffefffffffL & l) != 0L) {
                                jjCheckNAddStates(33, 35);
                            }
                            break;
                        case 2:
                            if (curChar == 92) {
                                jjAddStates(121, 123);
                            }
                            break;
                        case 3:
                            if ((0x14404410144044L & l) != 0L) {
                                jjCheckNAddStates(33, 35);
                            }
                            break;
                        case 9:
                            if ((0x400000004000L & l) != 0L) {
                                jjAddStates(119, 120);
                            }
                            break;
                        case 10:
                            if ((0x100000001000L & l) != 0L && kind > 14) {
                                kind = 14;
                            }
                            break;
                        case 11:
                        case 13:
                            if ((0x100000001000L & l) != 0L) {
                                jjCheckNAdd(10);
                            }
                            break;
                        case 12:
                            if ((0x20000000200000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 11;
                            }
                            break;
                        case 14:
                            if ((0x20000000200000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 13;
                            }
                            break;
                        case 15:
                            if ((0x10000000100000L & l) != 0L) {
                                jjAddStates(117, 118);
                            }
                            break;
                        case 16:
                            if ((0x2000000020L & l) != 0L && kind > 7) {
                                kind = 7;
                            }
                            break;
                        case 17:
                        case 19:
                            if ((0x20000000200000L & l) != 0L) {
                                jjCheckNAdd(16);
                            }
                            break;
                        case 18:
                            if ((0x4000000040000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 17;
                            }
                            break;
                        case 20:
                            if ((0x4000000040000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 19;
                            }
                            break;
                        case 21:
                            if ((0x4000000040L & l) != 0L) {
                                jjAddStates(115, 116);
                            }
                            break;
                        case 22:
                        case 25:
                            if ((0x8000000080000L & l) != 0L) {
                                jjCheckNAdd(16);
                            }
                            break;
                        case 23:
                            if ((0x100000001000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 22;
                            }
                            break;
                        case 24:
                            if ((0x200000002L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 23;
                            }
                            break;
                        case 26:
                            if ((0x100000001000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 25;
                            }
                            break;
                        case 27:
                            if ((0x200000002L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 26;
                            }
                            break;
                        case 30:
                            jjAddStates(0, 2);
                            break;
                        case 35:
                            jjCheckNAddTwoStates(35, 36);
                            break;
                        case 37:
                        case 38:
                            jjCheckNAddTwoStates(38, 36);
                            break;
                        case 46:
                            if ((0x2000000020L & l) != 0L) {
                                jjAddStates(124, 125);
                            }
                            break;
                        case 51:
                            if ((0x2000000020L & l) != 0L) {
                                jjAddStates(126, 127);
                            }
                            break;
                        case 55:
                            if ((0x2000000020L & l) != 0L) {
                                jjAddStates(128, 129);
                            }
                            break;
                        case 59:
                            if ((0x2000000020L & l) != 0L) {
                                jjAddStates(130, 131);
                            }
                            break;
                        case 63:
                            if ((0x7fffffe07fffffeL & l) == 0L) {
                                break;
                            }
                            if (kind > 12) {
                                kind = 12;
                            }
                            jjstateSet[jjnewStateCnt++] = 64;
                            break;
                        case 64:
                            if ((0x7fffffe07fffffeL & l) == 0L) {
                                break;
                            }
                            if (kind > 12) {
                                kind = 12;
                            }
                            jjstateSet[jjnewStateCnt++] = 65;
                            break;
                        case 65:
                            if ((0x7fffffe07fffffeL & l) != 0L && kind > 12) {
                                kind = 12;
                            }
                            break;
                        case 67:
                            if ((0x2000000020L & l) != 0L) {
                                jjAddStates(132, 133);
                            }
                            break;
                        case 71:
                            if ((0x2000000020L & l) != 0L) {
                                jjAddStates(134, 135);
                            }
                            break;
                        case 76:
                            if ((0x2000000020L & l) != 0L) {
                                jjAddStates(136, 137);
                            }
                            break;
                        case 83:
                            if ((0x2000000020L & l) != 0L) {
                                jjAddStates(138, 139);
                            }
                            break;
                        case 97:
                            if ((0x7fffffe87fffffeL & l) == 0L) {
                                break;
                            }
                            if (kind > 15) {
                                kind = 15;
                            }
                            jjCheckNAddStates(107, 114);
                            break;
                        case 98:
                            if ((0x7fffffe87fffffeL & l) == 0L) {
                                break;
                            }
                            if (kind > 15) {
                                kind = 15;
                            }
                            jjCheckNAddStates(57, 61);
                            break;
                        case 109:
                            if (curChar == 91) {
                                jjAddStates(140, 141);
                            }
                            break;
                        case 111:
                            if (curChar != 93) {
                                break;
                            }
                            if (kind > 15) {
                                kind = 15;
                            }
                            jjCheckNAddTwoStates(112, 143);
                            break;
                        case 113:
                        case 114:
                            if ((0x7fffffe87fffffeL & l) == 0L) {
                                break;
                            }
                            if (kind > 15) {
                                kind = 15;
                            }
                            jjCheckNAddStates(68, 72);
                            break;
                        case 125:
                            if (curChar == 91) {
                                jjAddStates(142, 143);
                            }
                            break;
                        case 128:
                            if ((0xffffffffefffffffL & l) != 0L) {
                                jjCheckNAddStates(79, 81);
                            }
                            break;
                        case 129:
                            if (curChar == 92) {
                                jjAddStates(144, 146);
                            }
                            break;
                        case 130:
                            if ((0x14404410144044L & l) != 0L) {
                                jjCheckNAddStates(79, 81);
                            }
                            break;
                        case 136:
                            if ((0x10000000100000L & l) != 0L && kind > 15) {
                                kind = 15;
                            }
                            break;
                        case 137:
                            if ((0x100000001000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 136;
                            }
                            break;
                        case 138:
                            if ((0x20000000200000L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 137;
                            }
                            break;
                        case 139:
                            if ((0x200000002L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 138;
                            }
                            break;
                        case 140:
                            if ((0x4000000040L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 139;
                            }
                            break;
                        case 141:
                            if ((0x2000000020L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 140;
                            }
                            break;
                        case 142:
                            if ((0x1000000010L & l) != 0L) {
                                jjstateSet[jjnewStateCnt++] = 141;
                            }
                            break;
                        case 143:
                            if (curChar == 64) {
                                jjstateSet[jjnewStateCnt++] = 142;
                            }
                            break;
                        case 145:
                            if ((0xffffffffefffffffL & l) != 0L) {
                                jjCheckNAddStates(86, 88);
                            }
                            break;
                        case 146:
                            if (curChar == 92) {
                                jjAddStates(147, 149);
                            }
                            break;
                        case 147:
                            if ((0x14404410144044L & l) != 0L) {
                                jjCheckNAddStates(86, 88);
                            }
                            break;
                        case 153:
                            if ((0x7fffffe87fffffeL & l) == 0L) {
                                break;
                            }
                            if (kind > 16) {
                                kind = 16;
                            }
                            jjCheckNAddStates(93, 95);
                            break;
                        case 164:
                            if (curChar == 91) {
                                jjAddStates(150, 151);
                            }
                            break;
                        case 166:
                            if (curChar == 93 && kind > 16) {
                                kind = 16;
                            }
                            break;
                        case 168:
                            if ((0xffffffffefffffffL & l) != 0L) {
                                jjCheckNAddStates(100, 102);
                            }
                            break;
                        case 169:
                            if (curChar == 92) {
                                jjAddStates(152, 154);
                            }
                            break;
                        case 170:
                            if ((0x14404410144044L & l) != 0L) {
                                jjCheckNAddStates(100, 102);
                            }
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            } else {
                int hiByte = (curChar >> 8);
                int i1 = hiByte >> 6;
                long l1 = 1L << (hiByte & 077);
                int i2 = (curChar & 0xff) >> 6;
                long l2 = 1L << (curChar & 077);
                MatchLoop: do {
                    switch (jjstateSet[--i]) {
                        case 0:
                            if (!jjCanMove_1(hiByte, i1, i2, l1, l2)) {
                                break;
                            }
                            if (kind > 15) {
                                kind = 15;
                            }
                            jjCheckNAddStates(107, 114);
                            break;
                        case 1:
                            if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {
                                jjAddStates(33, 35);
                            }
                            break;
                        case 30:
                            if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {
                                jjAddStates(0, 2);
                            }
                            break;
                        case 35:
                            if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {
                                jjCheckNAddTwoStates(35, 36);
                            }
                            break;
                        case 37:
                        case 38:
                            if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {
                                jjCheckNAddTwoStates(38, 36);
                            }
                            break;
                        case 63:
                            if (!jjCanMove_1(hiByte, i1, i2, l1, l2)) {
                                break;
                            }
                            if (kind > 12) {
                                kind = 12;
                            }
                            jjstateSet[jjnewStateCnt++] = 64;
                            break;
                        case 64:
                            if (!jjCanMove_1(hiByte, i1, i2, l1, l2)) {
                                break;
                            }
                            if (kind > 12) {
                                kind = 12;
                            }
                            jjstateSet[jjnewStateCnt++] = 65;
                            break;
                        case 65:
                            if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 12) {
                                kind = 12;
                            }
                            break;
                        case 98:
                            if (!jjCanMove_1(hiByte, i1, i2, l1, l2)) {
                                break;
                            }
                            if (kind > 15) {
                                kind = 15;
                            }
                            jjCheckNAddStates(57, 61);
                            break;
                        case 113:
                        case 114:
                            if (!jjCanMove_1(hiByte, i1, i2, l1, l2)) {
                                break;
                            }
                            if (kind > 15) {
                                kind = 15;
                            }
                            jjCheckNAddStates(68, 72);
                            break;
                        case 128:
                            if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {
                                jjAddStates(79, 81);
                            }
                            break;
                        case 145:
                            if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {
                                jjAddStates(86, 88);
                            }
                            break;
                        case 153:
                            if (!jjCanMove_1(hiByte, i1, i2, l1, l2)) {
                                break;
                            }
                            if (kind > 16) {
                                kind = 16;
                            }
                            jjCheckNAddStates(93, 95);
                            break;
                        case 168:
                            if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {
                                jjAddStates(100, 102);
                            }
                            break;
                        default:
                            break;
                    }
                } while (i != startsAt);
            }
            if (kind != 0x7fffffff) {
                jjmatchedKind = kind;
                jjmatchedPos = curPos;
                kind = 0x7fffffff;
            }
            ++curPos;
            if ((i = jjnewStateCnt) == (startsAt = 176 - (jjnewStateCnt = startsAt))) {
                return curPos;
            }
            try {
                curChar = input_stream.readChar();
            } catch (java.io.IOException e) {
                return curPos;
            }
        }
    }

    static final int[] jjnextStates = { 30, 31, 33, 41, 43, 42, 44, 54, 55, 58, 59, 62, 66, 67, 70, 71, 80, 79, 81, 63,
            87, 41, 42, 49, 54, 58, 62, 66, 70, 74, 79, 29, 34, 1, 2, 4, 80, 79, 81, 66, 67, 63, 43, 42, 44, 1, 2, 6,
            4, 37, 39, 75, 76, 63, 82, 83, 63, 98, 99, 109, 112, 143, 98, 99, 106, 109, 112, 143, 112, 114, 115, 125,
            143, 112, 114, 115, 122, 125, 143, 128, 129, 131, 128, 129, 133, 131, 145, 146, 148, 145, 146, 150, 148,
            153, 154, 164, 153, 154, 161, 164, 168, 169, 171, 168, 169, 173, 171, 98, 99, 109, 112, 143, 153, 154, 164,
            24, 27, 18, 20, 12, 14, 3, 5, 7, 47, 48, 52, 53, 56, 57, 60, 61, 68, 69, 72, 73, 77, 78, 84, 85, 110, 144,
            126, 127, 130, 132, 134, 147, 149, 151, 165, 167, 170, 172, 174, };

    private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2) {
        switch (hiByte) {
            case 0:
                return ((jjbitVec2[i2] & l2) != 0L);
            default:
                if ((jjbitVec0[i1] & l1) != 0L) {
                    return true;
                }
                return false;
        }
    }

    private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2) {
        switch (hiByte) {
            case 0:
                return ((jjbitVec3[i2] & l2) != 0L);
            default:
                return false;
        }
    }

    public static final String[] jjstrLiteralImages = { "", null, null, null, null, null, null, null, null, null, null,
            null, null, null, null, null, null, null, null, null, "\75", "\41\75", "\74", "\76", "\74\75", "\76\75",
            "\53", "\55", "\52", "\57", "\41", "\50", "\51", "\73", };
    public static final String[] lexStateNames = { "DEFAULT", };
    static final long[] jjtoToken = { 0x3fff9db81L, };
    static final long[] jjtoSkip = { 0x7eL, };
    protected JavaCharStream input_stream;
    private final int[] jjrounds = new int[176];
    private final int[] jjstateSet = new int[352];
    protected char curChar;

    public FlParserTokenManager(JavaCharStream stream) {
        if (JavaCharStream.staticFlag) {
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
        }
        input_stream = stream;
    }

    public FlParserTokenManager(JavaCharStream stream, int lexState) {
        this(stream);
        SwitchTo(lexState);
    }

    public void ReInit(JavaCharStream stream) {
        jjmatchedPos = jjnewStateCnt = 0;
        curLexState = defaultLexState;
        input_stream = stream;
        ReInitRounds();
    }

    private final void ReInitRounds() {
        int i;
        jjround = 0x80000001;
        for (i = 176; i-- > 0;) {
            jjrounds[i] = 0x80000000;
        }
    }

    public void ReInit(JavaCharStream stream, int lexState) {
        ReInit(stream);
        SwitchTo(lexState);
    }

    public void SwitchTo(int lexState) {
        if (lexState >= 1 || lexState < 0) {
            throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.",
                    TokenMgrError.INVALID_LEXICAL_STATE);
        } else {
            curLexState = lexState;
        }
    }

    protected Token jjFillToken() {
        Token t = Token.newToken(jjmatchedKind);
        t.kind = jjmatchedKind;
        String im = jjstrLiteralImages[jjmatchedKind];
        t.image = (im == null) ? input_stream.GetImage() : im;
        t.beginLine = input_stream.getBeginLine();
        t.beginColumn = input_stream.getBeginColumn();
        t.endLine = input_stream.getEndLine();
        t.endColumn = input_stream.getEndColumn();
        return t;
    }

    int curLexState = 0;
    int defaultLexState = 0;
    int jjnewStateCnt;
    int jjround;
    int jjmatchedPos;
    int jjmatchedKind;

    public Token getNextToken() {
        Token matchedToken;
        int curPos = 0;

        EOFLoop: for (;;) {
            try {
                curChar = input_stream.BeginToken();
            } catch (java.io.IOException e) {
                jjmatchedKind = 0;
                matchedToken = jjFillToken();
                return matchedToken;
            }

            try {
                input_stream.backup(0);
                while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L) {
                    curChar = input_stream.BeginToken();
                }
            } catch (java.io.IOException e1) {
                continue EOFLoop;
            }
            jjmatchedKind = 0x7fffffff;
            jjmatchedPos = 0;
            curPos = jjMoveStringLiteralDfa0_0();
            if (jjmatchedKind != 0x7fffffff) {
                if (jjmatchedPos + 1 < curPos) {
                    input_stream.backup(curPos - jjmatchedPos - 1);
                }
                if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L) {
                    matchedToken = jjFillToken();
                    return matchedToken;
                } else {
                    continue EOFLoop;
                }
            }
            int error_line = input_stream.getEndLine();
            int error_column = input_stream.getEndColumn();
            String error_after = null;
            boolean EOFSeen = false;
            try {
                input_stream.readChar();
                input_stream.backup(1);
            } catch (java.io.IOException e1) {
                EOFSeen = true;
                error_after = curPos <= 1 ? "" : input_stream.GetImage();
                if (curChar == '\n' || curChar == '\r') {
                    error_line++;
                    error_column = 0;
                } else {
                    error_column++;
                }
            }
            if (!EOFSeen) {
                input_stream.backup(1);
                error_after = curPos <= 1 ? "" : input_stream.GetImage();
            }
            throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar,
                    TokenMgrError.LEXICAL_ERROR);
        }
    }

}
