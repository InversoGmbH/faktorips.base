Association_msg_MaxCardinalityMustBeAtLeast1=Maximum cardinality must be at least 1.
Association_msg_MaxCardinalityForDerivedUnionTooLow=Maximum cardinality for a derived union must be greater than 1.
Association_msg_MinCardinalityGreaterThanMaxCardinality=Minimum cardinality is greater than maximum cardinality.
Association_msgSubsetOfDerivedUnionSameMaxCardinality=The cardinality upper bound must be the same as one of the derived union which is subsetted by this association.
Association_msg_TargetRolePlural=Target role (plural)
Association_msg_TargetRoleSingular=Target role (singular)
Association_msg_TargetRoleSingularNotAValidJavaFieldName=The target role (singular) ''{0}'' is not a valid Java name.
Association_msg_TargetRolePluralNotAValidJavaFieldName=The target role (plural) ''{0}'' is not a valid Java name.
Association_msgDerivedUnionNotSubset=The derived union association cannot be its own subset.
Association_msg_TargetRoleSingularIlleaglySameAsTargetRolePlural=Target role singular and target role plural have to be different.
Association_msg_DerivedUnionDoesNotExist=The derived union {0} does not exist in type's hierarchy.
Association_msg_NotMarkedAsDerivedUnion=The indicated association is not marked as derived union.
Association_msg_TargetOfDerivedUnionDoesNotExist=The target role of the derived union is empty or the target does not exists\!
Association_msg_TargetNotSubclass=The target class of this association is not a subclass (or the same class) of the derived union's target.
Association_msg_ConstrainedAssociationSingularDoesNotExist=The target role singular \"{0}\" must match an association in supertype hierarchy.
Association_msg_ConstrainedAssociationPluralDoesNotExist=The target role plural \"{0}\" must match an association in supertype hierarchy.
Association_msg_ConstraintIsSubsetOfDerivedUnion=A subset of a derived union cannot overwrite an association from the hierarchy.
Association_msg_ConstraintIsDerivedUnion=A derived union association cannot overwrite an association from the hierarchy.

Attribute_msg_InvalidAttributeName=Invalid attribute name.
Attribute_msg_DefaultNotParsable_UnknownDatatype=The default value {0} can't be parsed because the datatype is unknown\!
Attribute_msg_DefaultValueIsEmptyString="empty String"
Attribute_msg_ValueTypeMismatch=The default value {0} is not a {1}.
Attribute_msg_DefaultNotInValueset=The default value {0} is no member of the specified valueSet\!
Attribute_msgNothingToOverwrite=No attribute {0} in supertype hierarchy, so nothing can be overwritten.
Attribute_msg_Overwritten_datatype_different=The datatype is different to the datatype of the overwritten attribute\!
Attribute_msg_Overwritten_modifier_different=The modifier is different to the modifier of the overwritten attribute\!
Attribute_ValueSet_not_SubValueSet_of_the_overridden_attribute=The value set defined in this attribute must be a more detailed specification of the value set in the overridden attribute (but it is not).

TypeMethod_duplicateSignature=A method with the same signature has already been defined in this class.
TypeMethod_incompatbileReturnType=The return type is incompatible with {0}.{1}
TypeMethod_msg_abstractMethodError=The abstract method {0} can only be defined in an abstract type\!
TypeMethod_msg_modifierOverriddenNotEqual=This method must have the same access modifier as the overridden method. ({0}) 

Type_msg_AbstractMissmatch=Only an abstract type can have abstract methods.
Type_msg_supertypeNotFound=The supertype {0}  can't be found\!
Type_msg_cycleInTypeHierarchy=The type's hierarchy contains a cycle\!
Type_msg_MustOverrideAbstractMethod=Must override the abstract method {0} defined in {1}
Type_msg_MustImplementDerivedUnion=The type must either implement the derived union {0} defined in {1} or declared as abstract.\n(This rule can be disabled in the .ipsproject properties file via the \'derivedUnionIsImplementedRuleEnabled\' property.)
Type_msg_MustImplementInverseDerivedUnion=The type must either implement the inverse of the derived union {0} defined in {1} or declared as abstract.\n(This rule can be disabled in the .ipsproject properties file via the \'derivedUnionIsImplementedRuleEnabled\' property.)
Type_msg_TypeHierarchyInconsistent=The type's hierarchy is inconsistent\!

DuplicatePropertyNameValidator_msg=Duplicate property {0}. Note: Property names are compared case insensitive. Associations and attributes are both properties of a type.
Type_msgOtherTypeWithSameQNameInSameProject=There exists a {0} with the same qualified name within this project.
Type_msgOtherTypeWithSameQNameInDependentProject=There exists a {0} with the same qualified name in the project: {1}. In the ips object path of this project the entry for the project {1} is ahead of the source folder entry. It is recommended to adjust the ips object path.
