«IMPORT org::faktorips::devtools::core::builder::naming»
«IMPORT org::faktorips::devtools::stdbuilder::xpand::template»
«IMPORT org::faktorips::devtools::stdbuilder::xpand::model»
«IMPORT org::faktorips::devtools::stdbuilder::xpand::productcmpt::model»

«EXTENSION org::faktorips::devtools::stdbuilder::xpand::template::CommonGeneratorExtensions»

«DEFINE main FOR XProductCmptGenerationClass-»
	«FILE getFileName(BuilderAspect::IMPLEMENTATION) -»
	package «packageName»;
	

		«EXPAND CommonDefinitions::ImportBlock FOREACH imported() ONFILECLOSE»
		«EXPAND CommonDefinitions::ImportBlock FOREACH modelContext.imports ONFILECLOSE»
	
		/**
		 * «localizedJDoc("CLASS", getSimpleName(BuilderAspect::INTERFACE))»
		 * @generated
		 */
		public class «getSimpleName(BuilderAspect::IMPLEMENTATION)» extends «superclassName-»
			«IF implementsInterface-» implements «FOREACH implementedInterfaces AS interface SEPARATOR ","-»
				«addImport(interface)»
			«ENDFOREACH-»
			«ENDIF-»
		 {
			«EXPAND ProductAssociation::field FOREACH associations-»
			
			«EXPAND ProductAssociation::getterSetterAdder FOREACH  associations»
			
			«EXPAND DerivedUnionAssociation::methodsForDerivedUnion(this) FOREACH  derivedUnionAssociations»
			
			«EXPAND ProductAssociation::getLinkMethods»
		 }
	«ENDFILE»
«ENDDEFINE»

«DEFINE addImport(String import) FOR XClass»
	«imported().add(newImport(import)) -> import.split(".").last()-»
«ENDDEFINE»